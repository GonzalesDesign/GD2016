{"version":3,"sources":["webpack:///webpack/bootstrap fb77a70d672273621f91","webpack:///./js/index.es6","webpack:///./js/animationFunctions.js","webpack:///./js/gdSite2016.es6","webpack:///./js/nextPreviousArrows.js","webpack:///./js/twoColumns.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;;;;;;AChDD;;AAEA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kCAAiC,MAAM,+BAA+B,eAAe;AACrF;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,MAAM,+BAA+B,eAAe;AAClF;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA,uBAAsB,sBAAsB;AAC5C,oDAAmD;AACnD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;;;;;;ACnHD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACdmCAAkC,eAAe;;AAEjD;AACA;AACA,6CAA4C,yBAAyB;;AAErE;AACA;;AAEA;AACA;AACA;AACA,wCAAuC,oBAAoB;AAC3D,qCAAoC,iBAAiB;;AAErsCAAqC;AACrC;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD;AACjD;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB,sBAAqB;AACrB,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,sCAAqC;AACrC,6CAA4C;AAC5C,4DAA2D;AAC3D;AACA,yDAAwD;AACxD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAAyC;AACzC,0CAAyC;AACzC,8DAA6D;AAC7D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,iDAAiD;AACzE;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,WAAU,2DAA2D;AACrE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8CAA6C;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8CAA6C;AAC7C,+CAA8C;AAC9C,sEAAqE;AACrE,oBAAmB,kBAAkB,EAAE;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA8C;AAC9C;AACA;AACA,yDAAwD;AACxD,0DAAyD;AACzD;AACA;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC;AACzC,uCAAsC;AACtC,4DAA2D;AAC3D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAwB;AACxB,gDAA+C;AAC/C,mCAAkC;AAClC,sDAAqD;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAwC;AACxC,kCAAiC;AACjC;AACA,4DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAAyC;AACzC,kCAAiC;AACjC;AACA,4DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,MAAM,+BAA+B,kBAAkB;AACvF;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,SAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA;AACA,YAAW;AACX;AACA,UAAS;AACT,wCAAuC;AACvC;AACA;AACA,YAAW;AACX;AACA;AACA,UAAS;AACT,wCAAuC;AACvC;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yCAAwC;AACxC,KAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL,KAAI;AACJ;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ,IAAG;AACH;AACA;AACA;AACA;AACA,KAAI;AACJ,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;;;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAkF;AAClF;AACA;AACA,6EAA4E;AAC5E,oDAAmD;AACnD;AACA,+EAA8E;AAC9E;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,8EAA6E;AAC7E;AACA,gEAA+D;AAC/D;;AAEA;AACA;AACA,6EAA4E;AAC5E,sGAAqG;;AAErG;AACA;AACA,+EAA8E;AAC9E,sEAAqE;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;;AAET;AACA,8HAA6H;AAC7H;AACA;;AAEA;AACA,sIAAqI;AACrI;AACA;;AAEA;AACA,uHAAsH;AACtH;AACA;;AAEA;;AAEA;AACA,6GAA4G;AAC5G,oCAAmC;AACnC,8CAA6C;AAC7C;AACA;AACA;;AAEA;;AAEA,qDAAoD;;AAEpD;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA,sDAAqD,+BAA+B;AACpF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA;AACA;AACA,iDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAiC,GAAG,GAAG,WAAW;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qDAAoD;;AAEpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA4B,GAAG,GAAG,WAAW;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oEAAmE;AACnE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mGAAkG;AAClG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA6E;AAC7E,oEAAmE;AACnE,8EAA6E;;AAE7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAY;;AAEZ,0DAAyD;;AAEzD;AACA,+DAA8D;AAC9D;AACA;AACA;AACA,qGAAoG;;AAEpG;AACA;AACA,4DAA2D;AAC3D,kEAAiE;;AAEjE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wGAAuG;;AAEvG;AACA;;AAEA,qCAAoC;;AAEpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yCAAwC;AACxC,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8DAA6D;AAC7D,kDAAiD;;AAEjD;AACA;AACA,yDAAwD;AACxD,iDAAgD;AAChD,iDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA,8EAA6E;;AAE7E;AACA;;AAEA;AACA,6DAA4D;AAC5D;AACA,+DAA8D;AAC9D;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;;AAEA;;AAEA,KAAI;;AAEJ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA0C;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA,OAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2FAA0F;AAC1F;AACA;;;AAGA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,QAAO;;AAEP,IAAG;AACH;;AAEA;AACA;AACA,oBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAoB,0BAA0B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D;AAC1D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,iBAAiB;AACtD,uCAAsC,kBAAkB;AACxD;AACA;AACA;AACA;;AAEA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA,EAAC;;;;;;;AC5zDD;;AAEA,cAAa;;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,2DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAsB;AACtB,2BAA0B,kBAAkB,kBAAkB;AAC9D,2BAA0B,iBAAiB,iBAAiB;AAC5D,0BAAyB;AACzB,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAAyE;AACzE;AACA;AACA,wCAAuC,iBAAiB,kBAAkB,gBAAgB;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;;AAEA;AACA,qFAAoF,IAAI;AACxF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,aAAa;AACjC,kDAAiD;AACjD,kDAAiD;AACjD;AACA,kDAAiD;AACjD,kDAAiD;AACjD,kDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD;AACjD,kDAAiD;AACjD;AACA,kDAAiD;AACjD,kDAAiD;AACjD,kDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA,EAAC;;;;;;;ACnJD;;AAEA,cAAa;;AAEb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C;AACA;AACA,UAAS;AACT,QAAO;AACP,2CAA0C;AAC1C;AACA;AACA,UAAS;AACT,QAAO;AACP,2CAA0C;AAC1C;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA,EAAC","file":"./js/index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap fb77a70d672273621f91\n **/","/***********************************************\n * Project: Project Name Goes Here\n * Developer: rolandolloyd@gmail.com\n * Copyright © 2015 GonzalesDesign\n * Platform: NodeJS, ES6, Webpack, Babel & Node-Sass\n * Module: Index\n ***********************************************/\n\n( function() { /*IIFE:Immediately-Invoked Function Expression*/\n\t\"use strict\";\n\n\t/**----------===| MODULE: LANDING PAGE |===----------**/\n\tconst landingPage = require( './gdSite2016.es6' );\n\tlandingPage.fIntroAjax();\n\t//\n\t// /**----------===| MODULE: IMAGE CAROUSEL |===----------**/\n\t// const imageCarousel = require( './imageCarousel.es6' );\n\t// imageCarousel.fCarouselResize();\n\t//\n\t// /**----------===| MODULE: SERVICES |===----------**/\n\t// const servicesList = require( './servicesList.es6' );\n\t// servicesList.fServicesListAjax();\n\t//\n\t// /**----------===| MODULE: RESPONSES |===----------**/\n\t// const responsesSection = require( './responses.es6' );\n\t// responsesSection.fResponsesAjax();\n\t//\n\t// /**----------===| MODULE: HEALTH CARE |===----------**/\n\t// const halthCareSection = require( './healthCare.es6' );\n\t// halthCareSection.fHealthCareAjax();\n\t//\n\t// /**----------===| MODULE: ABOUT || EXPERIENCE |===----------**/\n\t// const aboutSection = require( './about.es6' );\n\t// aboutSection.fAboutAjax();\n\t//\n\t// /**----------===| FUNCTION: SCREEN RESIZE QUERIES |===----------**/\n\t// let fOnWindowResize = function() {\n\t//\n\t// \tservicesList.fServicesResize();\n\t//\n\t// \tlandingPage.fLandingPageResize();\n\t//\n\t// \timageCarousel.fCarouselResize();\n\t//\n\t// }\n\t//\n\t// $( window ).on( 'resize', fOnWindowResize );\n\n}() );\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/index.es6\n ** module id = 0\n ** module chunks = 0\n **/","/**----------===| Created by Odee on 5/18/16.|===----------**/\n\n(function() { //IIFE:Immediately-Invoked Function Expression. Scope Encapsulation\n\n  \"use strict\";\n  console.log(\"Filename: animationFunctions.js\");\n  /**-----------=====| TweenMax Reference Variables |=====-----------**/\n  /** Description:\n   ** Animation engine using GSAP TweenMax\n   ********************************************************************/\n  //let fTweenMax = function() {\n  let tMx = TweenMax;\n  let easeSine = Sine.easeOut;\n  let power3 = Power3.easeOut;\n  let power4 = Power4.easeOut;\n  let back = Back.easeOut.config(1);\n  let elastic = Elastic.easeOut;\n  let circular = Circ.easeOut;\n  let expo = Expo.easeOut;\n  let sloMo = SlowMo.ease.config(0.7, 0.7, false)\n  let animTym = 1;\n  let animTymSlow = 1;\n  let animTymFast = .25;\n  //};\n\n  /**-----------=====| fOpacityAnim Function |=====-----------**/\n  /** Description:\n   ** Animates element's opacity from 0% to 100%\n   *************************************************************/\n  let fOpacityAnim = function(elem) {\n    elem.css({\n      \"opacity\": 0\n    });\n    tMx.to(elem, animTym, {\n      opacity: 1,\n      ease: easeSine\n    });\n  };\n\n  /**-----------=====| fXSlider Function |=====-----------**/\n  /** Description:\n   ** Animates element's horizontal positions\n   ** Use the attribute \"left\" instead of the matrix \"x\" (translateX())\n   ** as a key and the horizPos param as value.\n   ** http://greensock.com/forums/topic/6963-tweenmax-tweening-css-x-vs-left/\n   ****************************************************************/\n  let fXSlider = function(elem, horizPos) {\n    //fOpacityAnim(elem);\n    tMx.to(elem, animTym, {\n      left: horizPos,\n      ease: back\n    });\n  //console.log(\"elem, horizPos: \", elem, horizPos);\n  };\n\n  // /**-----------=====| fAnimateHeightWidth Function |=====-----------**/\n  // /** Descriptions:\n  //  ** Animates element's height and width\n  //  **----------------------------------------------------------------**/\n  // let fAnimateHeightWidth = function(elem, eHeight, eWidth, animTym) {\n  //   //tMx.to (elem, animTym, {css: {height: eHeight, width: eWidth}, ease: power3});\n  //   tMx.to(elem, animTym, {\n  //     height: (eHeight + \"px\"),\n  //     width: eWidth,\n  //     ease: power3\n  //   });\n  // };\n  /**-----------=====| fAnimateHeightWidth Function |=====-----------**/\n  /** Descriptions:\n   ** Animates element's height and width\n   **----------------------------------------------------------------**/\n  let fAnimateHeightWidth = function(elem, eHeight, eWidth, animTym) {\n    //tMx.to (elem, animTym, {css: {height: eHeight, width: eWidth}, ease: power3});\n    tMx.to(elem, animTym, {\n      height: eHeight,\n      width: eWidth,\n      ease: power3\n    });\n  };\n\n  // let fImageHeightWidth = function(imgsArray, ht, wt) {\n  //   /**----( Setting array member's heights and widths )----**/\n  //   for (let i = 0; i < imgsArray.length; i++) {\n  //     fAnimateHeightWidth(imgsArray[i], ht, wt); //rowImgRightColmnWidth);\n  //     console.log(\"imgsArray[i]: \", imgsArray[i]);\n  //   }\n  // };\n\n  let fFontSizer = function(elem, sizeFont) {\n    tMx.to(elem, animTymSlow, {\n      fontSize: sizeFont,\n      ease: power3\n    });\n  };\n\n\n\n  /**-----------=====| EXPORTS |=====-----------**/\n  /** DESCRIPTIONS:\n   ** ANIMATION MODULES\n   ** Webpack: module.exports\n   **----------------------------------------------------------------**/\n  //module.exports.fTweenMax = fTweenMax;\n  module.exports.fXSlider = fXSlider;\n  module.exports.fAnimateHeightWidth = fAnimateHeightWidth;\n  //module.exports.fImageHeightWidth = fImageHeightWidth;\n  module.exports.fFontSizer = fFontSizer;\n  //module.exports.animTym = animTym;\n  /**----------------------------------------------------------------**/\n  console.log(`\n  Filename: animationFunctions.js\n  module.exports.fXSlider = fXSlider\n  `);\n  /**----------------------------------------------------------------**/\n\n}());\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/animationFunctions.js\n ** module id = 1\n ** module chunks = 0\n **/","/**----------===| Created by Odee on 5/17/16.|===----------**/\n/****************************************\n * Project: R.Lloyd Gonzles Portfolio Website\n * URL: RLGonzales.com\n * Contact: rolandolloyd@gmail.com\n * Copyright © 2015 GonzalesDesign\n * Platform: ES2015, Webpack, Babel & Sass\n ****************************************/\n( function() { /*IIFE:Immediately-Invoked Function Expression*/\n\t\"use strict\";\n\t/**-----------=====| IMPORT | REQUIRE |=====-----------**/\n\t/** DESCRIPTIONS:\n\t ** FILES IMPORTED FROM OTHER JS FILES\n\t ** SEPERATE JS FILES FOR EASIER READABILITY AND MAINTENANCE\n\t **----------------------------------------------------------------**/\n\t// let $ = require(\"jquery\");\n\t// require('bootstrap');\n\t//const TweenMax = require('gsap');\n\t//const YouTubeIframeLoader = require('youtube-iframe');\n\t//let onYouTubeIframeAPIReady = require('./ytpScript');\n\t//require('./smoothscroll');\n\t/**----------=====| nextPreviousNav |=====----------**/\n\tconst nextPreviousNav = require( './nextPreviousArrows' );\n\t// const nextPreviousImage = new nextPreviousNav.NextPreviousClass();\n\t/**----------=====| anim |=====----------**/\n\tconst anim = require( './animationFunctions' );\n\t/**----------=====| twoKolumns |=====----------**/\n\tconst twoKolumns = require( './twoColumns' );\n\n\t//ANIMATION TIME\n\tlet animTymSlow = 1;\n\tlet animTymFast = .25;\n\t//let anim = new anim.animationFunctions();\n\n\t/**----------------------------------------------------------------**/\n\tconsole.log( `\n    Filename: codeArchitecture_X.js);\n    Import || Require: nextPreviousArrows.js\n    Import || Require: animationFunctions.js\n    Import || Require: twoColumns.js\n    ` );\n\t/**----------------------------------------------------------------**/\n\n\t/*\n\t console.log (`\n\t Things to do:\n\t - Activate the image navigations\n\t - Include the youTube video on OwnPhones\n\t - Modules: Seperate the class and function from the Ajax and animation\n\t - More research on Promise, Ajax & JSON\n\n\t May 16, 2016:\n\t - Promise\n\t - Arrow function\n\t - String literals\n\t - Transferred JS code to external js file\n\n\t May 17, 2016:\n\t - Image arrow navigations\n\t - computer crashed @ 7pm. Restarted 5x.\n\n\t May 18, 2016:\n\t - Integrated YouTube video\n\t - Image slider\n\n\t May 19, 2016:\n\t - Image description\n\n\t May 23 - 24:\n\t - Re-wrote class for generating div element\n\t - Seperated the class and style from each other. Make a separate calls in ajax for... of... loops\n\t - Easier to read and update\n\n\tMay 25, Wednesday:\n\t- Start working on the page animations\n\n\tMay 29, 30, 31 - June 6: NEXT PREVIOUS NAVIGATION\n\t- Worked on the next previous image navigation.\n\t- Finally got it to work by declaring class for each project\n\t- and push them to an array to be used in the animation events\n\n\tJune 7: Tuesday: VIDEO\n\t- Started to work on the video\n\tJune 8 - 9:\n\t- Video Height and Width:\n\tJune 10: Friday AM\n\t- Video height and width working but code needs cleaning\n\t- Everything seems to be working fine.\n\n\t- TO DO:\n\t  - START CLEANING CODE SO I CAN START BUILDING THE LANDING PAGE\n\t    - DELETE FUNCTIONS THAT ARE NOT BEING USED\n\t    - CLEAN UP ALL THE COMMENTS: KEEP JUST THE IMPORTANT ONES!\n\t  - SCREEN QUERIES: FONT SIZE, DISPLAY PERCENTAGE\n\t  - CONVERT ALL BOOTSTRAP DEPENDENCIES TO LOCAL JS\n\t    - BEST TO NOT RELY ON BOOTSTRAP\n\n\t `);\n\t */\n\n\t/************ ANIMATION ENGINE ************/\n\tvar tMx = TweenMax;\n\tvar easeSine = Sine.easeOut;\n\tvar easePower = Power3.easeOut;\n\t// var animTymSlow = .5;\n\t// var zeroTym = 0;\n\n\t// let fLog = function(logTHis) {\n\t//   console.log(logTHis);\n\t// };\n\n\t// /**----------=====| fRoundToTwo Function |=====----------**/\n\t// /** Description:\n\t//  ** fRoundToTwo: rounds the decimals to two.\n\t//  **------------------------------------------------------**/\n\t// let fRoundToTwo = function(num) {\n\t//   return +(Math.round(num + \"e+2\") + \"e-2\");\n\t// };\n\n\t//let numero = 0;\n\t// let fNxtPrvDosKolumn = function(rightArrow, leftArrow, imgContainer, imgContainerWidth, imgWidth) {\n\t//   //let numero = 0;\n\t//   rightArrow.click(function() {\n\t//     numero++;\n\t//     console.log(numero);\n\t//   });\n\t// }\n\n\t/**----------=====| DOM CACHING |=====----------**/\n\tlet outWindowWidth = window.outerWidth;\n\tlet inWindowWidth = window.innerWidth;\n\tlet inWindowHeight = window.innerHeight;\n\tlet container = $( \".container\" );\n\tlet containerWidth = ( container.width() );\n\t//let containerId = $(\"#containerId\");\n\t//console.log(`containerWidth: ${containerWidth}`);\n\n\tlet introFluidContainer = $( \".introFluidContainer\" );\n\tlet introFluidContainerWidth = ( introFluidContainer.width() );\n\t//console.log(`introFluidContainerWidth: ${introFluidContainerWidth}`);\n\n\tlet introContainer = $( \".introContainer\" );\n\tlet introContainerWidth = ( introContainer.width() );\n\n\tlet logoContainer = $( \".logoContainer\" );\n\t//let logoContainerHeight = logoContainer.height();\n\t//let heightPercentage = inWindowHeight * .05;\n\t//console.log(`logoContainerHeight: ${logoContainerHeight}`);\n\t//console.log(`heightPercentage: ${heightPercentage}`);\n\n\tlet mainContainer = $( \".mainContainer\" );\n\tlet mainContainerWidth = ( mainContainer.width() );\n\tlet mainContainerId = $( \"#mainContainerId\" );\n\t//console.log (`mainContainerWidth: `);\n\n\t/**----------===| use for dynamically populated |===----------**/\n\tlet gdContainer = $( \".gdContainer\" );\n\tlet gdContainerWidth = ( gdContainer.width() );\n\tlet gdContainerId = $( \"#gdContainerId\" );\n\n\tlet glyphicon;\n\n\t/**----------===| FONT SIZE VARIABLES |===----------**/\n\tconst logoTitleSmlFontSize = \"4em\";\n\tconst logoTitleMidFontSize = \"7em\";\n\tconst logoTitleLrgFontSize = \"8em\";\n\n\tconst logoSubTitleSmlFontSize = \"1em\";\n\tconst logoSubTitleMidFontSize = \"1.2em\";\n\tconst logoSubTitleLrgFontSize = \"1.6em\";\n\n\tconst introCalloutFontSize = \".9em\";\n\tconst codingBtnFontSize = \".9em\";\n\n\tconst headerSmlFontSize = \"1.4em\";\n\tconst headerMidFontSize = \"1.6em\";\n\tconst headerLrgFontSize = \"1.8em\";\n\n\tconst projTitleSmlFontSize = \"1.6em\";\n\tconst projTitleMidFontSize = \"1.8em\";\n\tconst projTitleLrgFontSize = \"2em\";\n\n\tconst projSubTitleSmlFontSize = \"1em\";\n\tconst projSubTitleMidFontSize = \"1em\";\n\tconst projSubTitleLrgFontSize = \"1.2em\";\n\n\tconst projDescSmlFontSize = \"1em\";\n\tconst projDescMidFontSize = \"1em\";\n\tconst projDescLrgFontSize = \"1.2em\";\n\n\tconst imgDescSmlFontSize = \"1em\";\n\tconst imgDescMidFontSize = \"1em\";\n\tconst imgDescLrgFontSize = \"1.2em\";\n\t// const imgDescSmlFontSize = \"12px\";\n\t// const imgDescMidFontSize = \"12px\";\n\t// const imgDescLrgFontSize = \"16px\";\n\n\t/**----------===| ARRAYS: USE FOR ANIMATIONS |===----------**/\n\tlet aIntroImages = [];\n\n\tlet aSectionsCount = [];\n\tlet aSectionsRightColumnPercent = [];\n\tlet aSectionHeaders = [];\n\tlet aSectionHeadrLeftColmn = [];\n\tlet aSectionHeadrRightColmn = [];\n\tlet aSectionHeadrTitles = [];\n\n\tlet aProjectsCount = [];\n\tlet aProjectRightColumnPercent = [];\n\tlet aProjContainerIds = [];\n\tlet aProjLeftColDivIds = [];\n\tlet aProjRightColDivIds = [];\n\n\tlet aProjImagesLength = [];\n\n\tlet aProjectDisplay = [];\n\n\tlet aLeftShaderIds = [];\n\tlet aRightShaderIds = [];\n\tlet aCarouselControl = [];\n\n\tlet aParagraphContainer = [];\n\t//let aProjParagDivIds = [];\n\tlet aProjParagLeftDivIds = [];\n\tlet aProjParagRightDivIds = [];\n\n\tlet aParagraphRightColumnPercent = [];\n\tlet aParagraphLeftColumnWidth = [];\n\tlet aParagraphRightColumnWidth = [];\n\n\tlet aParaghProjTitleIds = [];\n\tlet aParaghProjSubTitleIds = [];\n\tlet aParagraphProjDescription = [];\n\n\tlet aImagesCount = [];\n\tlet aFluidContainerIds = [];\n\tlet aImageFluidContainerIds = [];\n\n\tlet aImagesRightColumnPercent = [];\n\tlet aFluidContainerWidth = [];\n\tlet aFluidContainerHeight = [];\n\tlet aImagesOrigWidth = [];\n\tlet aImagesOrigHeight = [];\n\n\t//TEST\n\tlet a2ColImgProjRightCol = [];\n\tlet a2ColImgProjCount = [];\n\n\t//let aTempClickedCount = [1, 2, 3, 4]\n\tlet aImages = [];\n\tlet aImageIds = [];\n\tlet aImagesWidth = [];\n\tlet aImagesHeight = [];\n\tlet aImageDescriptIds = [];\n\n\tlet aVideoColumnPercent = [];\n\tlet aVideoWidth = [];\n\tlet aVideoHeight = [];\n\n\tlet aKounter = [];\n\tlet aKontainer = [];\n\n\tlet fluidContainerW;\n\tlet imageW;\n\n\tlet aNextNum = [];\n\n\t//class instances array:\n\tlet aNxtPrv = [];\n\n\t/**----------=====| JS CSS STYLE |=====----------**/\n\t/** Description:\n\t ** CSS within the ES6.\n\t ** Usage:\n\t ** Provides for a dynamic parameters referencing.\n\t **----------------------------------------------**/\n\tclass CSSStyle {\n\t\tconstructor() {}\n\n\t\tfCSSstyle( elemId, elemWidth, elemHeight ) {\n\t\t\telemId.css( {\n\t\t\t\t/*\"padding-left\"    : \"-15px\",\n\t\t\t\t \"padding-right\"   : \"-15px\",*/\n\t\t\t\t//\"background\"      : \"url(\" + imgSrc + \") no-repeat\",\n\t\t\t\t//\"background-size\" : \"cover\", //cover 100%\n\t\t\t\t\"width\": elemWidth, //\"1300px\", //containerWidth,\n\t\t\t\t\"height\": elemHeight, //ImageHeight(origWt, origHt), \"100%\", //\n\t\t\t\t\"border\": \"0px solid red\",\n\t\t\t\t\"background-color\": \"teal\",\n\t\t\t\t\"position\": \"relative\" //relative absolute\n\t\t\t\t\t//\"float\"           : \"left\"\n\t\t\t\t\t/*\"overflow\"        : \"hidden\"//hidden; visible*/\n\t\t\t} );\n\t\t}\n\t}\n\n\tlet mainContainerCSS = new CSSStyle();\n\tmainContainerCSS.fCSSstyle( mainContainerId, mainContainerWidth, \"200px\" );\n\n\n\tlet fDivStyle = function( divClassName, divHeight, divWidth, divOverflow = \"visible\", borderColor ) {\n\t\t//twoColTest.fTwoColumnsQueries (90, 544);\n\t\t//console.log (\"twoColTest.LeftColumn2: \", twoColTest.LeftColumn);\n\t\t//console.log (\"twoColTest.RightColumn2: \", twoColTest.RightColumn);\n\t\tdivClassName.css( {\n\t\t\t\"width\": divWidth,\n\t\t\t\"height\": divHeight,\n\t\t\t\"position\": \"relative\", //relative absolute\n\t\t\t\"float\": \"left\",\n\t\t\t\"overflow\": divOverflow, //hidden; visible\n\t\t\t//\"border\"  : \"0px solid \" + borderColor\n\t\t\t//\"border-bottom\" : \"10px solid\",\n\t\t\t\"border-color\": borderColor\n\t\t} );\n\t};\n\n\tlet fImgDivStyle = function( divNameId, imgSrc, divHeight, divWidth, divOverflow ) {\n\t\tdivNameId.css( {\n\t\t\t//\"padding-left\"    : \"-15px\",\n\t\t\t//\"padding-right\"   : \"-15px\",\n\t\t\t\"background\": \"url(\" + imgSrc + \") no-repeat\",\n\t\t\t\"background-size\": \"cover\", //cover 100%\n\t\t\t\"width\": divWidth,\n\t\t\t\"height\": divHeight,\n\t\t\t\"background-color\": \"teal\",\n\t\t\t\"position\": \"relative\", //relative absolute\n\t\t\t\"float\": \"left\",\n\t\t\t\"display\": \"block\",\n\t\t\t\"overflow\": divOverflow, //\"hidden\", //hidden; visible\n\t\t\t//\"border\"          : \"0px solid red\"\n\t\t\t\"border-color\": \"red\"\n\t\t} );\n\t};\n\n\tlet fParagStyle = function( divClassName ) {\n\t\tdivClassName.css( {\n\t\t\t\"width\": \"100%\",\n\t\t\t//\"height\"          : \"100%\",\n\t\t\t/*\"font-family\"     : \"Open Sans\",\n\t\t\t \"font-weight\"     : \"300\",\n\t\t\t \"font-size\"       : \"1.2em\",*/\n\t\t\t\"background-color\": \"beige\",\n\t\t\t\"position\": \"relative\", //relative absolute\n\t\t\t\"float\": \"left\"\n\t\t\t\t//\"display\"         : \"block\",\n\t\t\t\t//\"border\"          : \"1px solid red\"\n\t\t} );\n\t};\n\tlet fImgDescriptIdStyle = function( divNameId, imgHeight ) {\n\t\tdivNameId.css( {\n\t\t\t\"font-size\": \"2em\",\n\t\t\t\"width\": \"100%\",\n\t\t\t\"padding-top\": \"0px\",\n\t\t\t\"height\": \"50px\",\n\t\t\t\"padding-right\": \"30px\",\n\t\t\t\"letter-spacing\": \"1px\",\n\t\t\t\"text-shadow\": \"2px 2px 2px rgba(0, 0, 0, .3)\",\n\t\t\t\"margin-top\": imgHeight + \"px\"\n\t\t} );\n\t};\n\n\t/***************************| CLASS DECLARATIONS |***************************/\n\n\t/**----------=====| TwoColumnsQueriesClass Class |=====----------------------------------------------------**/\n\t/** Description:\n\t ** Class to calculate the two columns within the container.\n\t ** Provided percentage argument is pulled from json and is use for the right column converted to pixel.\n\t ** The left column will have the container's width minus the right column width.\n\t **--------------------------------------------------------------------------------------------------**/\n\t// class TwoColumnsQueriesClass {\n\t//   constructor() {}\n\t//\n\t//   fTwoColumnsQueries(rightColumnPercentage, imgOrigWidth, imgOrigHeight) {\n\t//     if (gdContainerWidth <= 600) {\n\t//       rightColumnPercentage = 95;\n\t//       this.RightColumn = Math.round(gdContainerWidth * (rightColumnPercentage / 100));\n\t//     // this.LeftColumn = Math.round(gdContainerWidth - this.RightColumn);\n\t//     // this.ResizePercent = fRoundToTwo(this.RightColumn / imgOrigWidth);\n\t//     // this.NewHeight = Math.round(imgOrigHeight * this.ResizePercent);\n\t//     } else {\n\t//       rightColumnPercentage = rightColumnPercentage;\n\t//       this.RightColumn = Math.round(gdContainerWidth * (rightColumnPercentage / 100));\n\t//     // this.LeftColumn = Math.round(gdContainerWidth - this.RightColumn);\n\t//     // this.ResizePercent = fRoundToTwo(this.RightColumn / imgOrigWidth);\n\t//     // this.NewHeight = Math.round(imgOrigHeight * this.ResizePercent);\n\t//     }\n\t//     this.LeftColumn = Math.round(gdContainerWidth - this.RightColumn);\n\t//     this.ResizePercent = fRoundToTwo(this.RightColumn / imgOrigWidth);\n\t//     this.NewHeight = Math.round(imgOrigHeight * this.ResizePercent);\n\t//   }\n\t// }\n\n\t/**----------===| Columns: Class Instances |===----------**/\n\tlet twoColumnsIntroSection = new twoKolumns.TwoColumnsQueriesClass();\n\tlet twoColumnsHeaderSection = new twoKolumns.TwoColumnsQueriesClass();\n\tlet twoColumnsImgProjects = new twoKolumns.TwoColumnsQueriesClass();\n\tlet twoColumnsParagProjects = new twoKolumns.TwoColumnsQueriesClass();\n\tlet twoColumnsImages = new twoKolumns.TwoColumnsQueriesClass();\n\tlet twoColumnsVideo = new twoKolumns.TwoColumnsQueriesClass();\n\t//let twoColumnsImgProjectsAnim = new twoKolumns.TwoColumnsQueriesClass();\n\tlet twoColumnsImagesAnim = new twoKolumns.TwoColumnsQueriesClass();\n\n\t//TEMP: THREE COLUMNS TEST\n\tconsole.log( \"inWindowWidth: \", inWindowWidth );\n\tlet oneThirdTest = new twoKolumns.ThreeColumnsClass();\n\toneThirdTest.fThreeColumns( gdContainerWidth );\n\n\t/**----------=====| CreateElementDiv Class |=====----------**/\n\t/** Description:\n\t ** Parent class template for creating basic generic divs.\n\t ** To minimize the creation of multiple methods that are similar in functionalities.\n\t **--------------------------------------------------------**/\n\tclass CreateElementDiv {\n\t\tconstructor() {\n\t\t\t//this.divName;\n\t\t\t//elemNameClass, elemNameId, divName) {\n\t\t\t//this.InstanceVarOrProperty = instanceVar;\n\t\t\t//this.RightColumn           = rightColumn;\n\t\t\t//this.LeftColumn            = columnDiv;\n\t\t\t//this.ElemNameClass;// = elemNameClass;\n\t\t\t//this.ElemNameId;//    = elemNameId;\n\t\t\t//this.DivName;// = divName;\n\t\t\t/**---------- To access these properties outside, use classInstance.property ----------**/\n\t\t}\n\n\t\t/** Generic method for creating div element **/\n\t\tfCreateDiv( title, counter, appendedTo ) {\n\t\t\tthis.divName = document.createElement( \"div\" );\n\t\t\tthis.divName.id = title + counter; //set id // title + \"Id_\" + counter;\n\t\t\tthis.divName.className = title + \"Class\"; //set className\n\t\t\t//let divNameId     = $ (\"#\" + title + \"Id_\" + counter); //get id\n\t\t\t$( this.divName ).appendTo( appendedTo );\n\t\t\t//divName.innerHTML = (\"<!--/*****************/-->\"); //for testing\n\t\t}\n\t}\n\n\t/**------------=====| CreateBasicElement Class |=====------------**/\n\t/** Description:\n\t ** CreateBasicElement class: For creating basic elements like divs.\n\t **--------------------------------------------------------------**/\n\tclass CreateBasicElement {\n\t\tconstructor() {\n\t\t\tthis.titleName;\n\t\t}\n\n\t\tfCreateBasicElement( titleId, counter, titleClass, appendedTo ) {\n\t\t\tthis.titleName = document.createElement( \"div\" );\n\t\t\tthis.titleName.id = titleId + counter; //set id // title + \"Id_\" + counter;\n\t\t\tthis.titleName.className = titleClass; //set className\n\t\t\t//let titleNameId     = $ (\"#\" + title + \"Id_\" + counter); //get id\n\t\t\t$( this.titleName ).appendTo( appendedTo );\n\t\t\t//fDivStyle(divClass, divHeight, divWidth, divOverflow, \"grey\");\n\t\t}\n\t}\n\n\tclass BasicTextContent extends CreateBasicElement {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\tfBasicTextContent( titleId, counter, titleClass, appendedTo, textString ) {\n\t\t\tsuper.fCreateBasicElement( titleId, counter, titleClass, appendedTo );\n\t\t\tthis.titleName.innerHTML = textString;\n\t\t}\n\t}\n\n\t/**------------=====| fBasicDivStyle CSS |=====------------*, \"relative\"*/\n\tlet fBasicDivStyle = function( divName, divHeight, divWidth, divPosition ) {\n\t\t//console.log(\"divName: \", divName);\n\t\tdivName.css( {\n\t\t\t\"width\": divWidth,\n\t\t\t\"height\": divHeight,\n\t\t\t\"position\": divPosition, //relative absolute\n\t\t\t\"float\": \"left\"\n\t\t\t\t//\"overflow\": divOverflow, //hidden; visible\n\t\t\t\t//\"border\": \"0px solid red\" //+ borderColor\n\t\t\t\t//\"border-bottom\" : \"10px solid\",\n\t\t\t\t//\"border-color\": borderColor\n\t\t} );\n\t\t//anim.fAnimateHeightWidth(divName, divHeight, divHeight, animTymSlow);\n\t};\n\t/**------------=====| fBasicIntroStyle CSS |=====------------**/\n\tlet fBasicIntroStyle = function( divName, divHeight, divWidth ) {\n\t\t//console.log(\"divName: \", divName);\n\t\tdivName.css( {\n\t\t\t\"width\": divWidth,\n\t\t\t\"height\": divHeight\n\t\t\t\t//\"position\": \"absolute\", //relative absolute\n\t\t\t\t//\"float\": \"left\",\n\t\t\t\t//\"z-index\": \"100\",\n\t\t\t\t//\"margin-top\": inWindowHeight - (divHeight + heightPercentage),\n\t\t\t\t//\"border\": \"1px solid yellow\"\n\t\t} );\n\t\t//anim.fAnimateHeightWidth(divName, divHeight, divHeight, animTymSlow);\n\t};\n\tlet fLogoContainer = function( borderColor ) {\n\t\tlet logoContainer = $( \".logoContainer\" );\n\t\t//let logoContainerHeight = logoContainer.height();\n\t\t//let heightPercentage = inWindowHeight * .05;\n\t\t//console.log (\"winHeight: \", winHeight);\n\t\t//console.log (\"heightPercentage: \", heightPercentage);\n\t\t//logoContainer.css ({\"top\": (winHeight + (logoContainerHeight - 300))});\n\t\tlogoContainer.css( {\n\t\t\t//\"margin-top\": inWindowHeight - (logoContainerHeight + heightPercentage)\n\t\t\t\"border-top\": \"4px double\" + borderColor,\n\t\t\t\"border-bottom\": \"6px double\" + borderColor\n\t\t} );\n\t};\n\t/**-----{ fLogoContainer: Adjust the logo container's top position }-----**/\n\t//fLogoContainer();\n\n\t/**------------=====| fBasicImageStyle CSS |=====------------**/\n\tlet fBasicImageStyle = function( divName, divHeight, divWidth, imgSrc ) {\n\t\tdivName.css( {\n\t\t\t\"width\": divWidth,\n\t\t\t\"height\": divHeight,\n\t\t\t//\"background\": \"url(\" + imgSrc + \")  center center fixed\",\n\t\t\t\"background\": \"url(\" + imgSrc + \") no-repeat\",\n\t\t\t\"background-size\": \"cover\", //cover 100%\n\t\t\t\"position\": \"relative\", //relative absolute\n\t\t\t\"float\": \"left\"\n\t\t\t\t//\"overflow\": divOverflow, //hidden; visible\n\t\t\t\t//\"border\"  : \"0px solid \" + borderColor\n\t\t\t\t//\"border-top\": \"0px solid red\"\n\t\t\t\t//\"border-color\": borderColor\n\t\t} );\n\t};\n\t/**------------=====| fBasicImageStyle CSS |=====------------**/\n\tlet fIntroImageStyle = function( divName, divHeight, divWidth, imgSrc ) {\n\t\tdivName.css( {\n\t\t\t\"width\": divWidth,\n\t\t\t\"height\": divHeight,\n\t\t\t\"background\": \"url(\" + imgSrc + \")  center center fixed\",\n\t\t\t//\"background\": \"url(\" + imgSrc + \") no-repeat\",\n\t\t\t\"background-size\": \"cover\", //cover 100%\n\t\t\t\"position\": \"relative\", //relative absolute\n\t\t\t\"float\": \"left\"\n\t\t\t\t//\"overflow\": divOverflow, //hidden; visible\n\t\t\t\t//\"border\"  : \"0px solid \" + borderColor\n\t\t\t\t//\"border-top\": \"0px solid red\"\n\t\t\t\t//\"border-color\": borderColor\n\t\t} );\n\t};\n\n\tconst createDiv = new CreateBasicElement();\n\tconst sectionHeaderText = new BasicTextContent();\n\n\t//const createDiv = new CreateBasicElement();\n\tconst imageBasicDiv = new CreateBasicElement();\n\n\t/**------------=====| End CreateBasicElement Class |=====------------**/\n\n\t/**----------=====| ProjectDiv Class |=====----------**/\n\t/** Description:\n\t ** ProjectDiv class template is an extension of the CreateElementDiv class.\n\t ** For creating project container divs.\n\t ***********************/\n\tclass ProjectDiv extends CreateElementDiv {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\tfCreateProjDiv( title, counter, appendedTo, divHeight, divWidth, divOverflow ) {\n\t\t\tsuper.fCreateDiv( title, counter, appendedTo );\n\t\t\tlet divClass = $( \".\" + title + \"Class\" ); //get class\n\t\t\tfDivStyle( divClass, divHeight, divWidth, divOverflow, \"grey\" );\n\t\t}\n\t}\n\n\t/**----------=====| ColumnDiv Class |=====----------**/\n\t/** Description:\n\t ** ColumnDiv class template is an extension of the CreateElementDiv class.\n\t ** For creating column divs.\n\t ***********************/\n\tclass ColumnDiv extends CreateElementDiv {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\tfCreateColumnDiv( title, counter, appendedTo, divHeight, divWidth, divOverflow ) {\n\t\t\tsuper.fCreateDiv( title, counter, appendedTo );\n\t\t\tlet divClass = $( \".\" + title + \"Class\" ); //get class\n\t\t\tlet divNameId = $( \"#\" + title + counter ); //get id\n\t\t\tfDivStyle( divNameId, divHeight, divWidth, divOverflow, \"black\" ); //DELETE COLOR\n\t\t\t//divClass.css({\"height\": \"250px\"}); //testing\n\t\t}\n\t}\n\n\t/**----------=====| ImgDiv Class |=====----------**/\n\t/** Description:\n\t ** ImgDiv class template is an extension\n\t ** of the CreateElementDiv class.\n\t ** For creating image divs.\n\t **----------------------------------------------**/\n\tclass ImgDiv extends CreateElementDiv {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\tfCreateImgDiv( title, counter, appendedTo, imgSrc, divHeight, divWidth, divOverflow ) {\n\t\t\tsuper.fCreateDiv( title, counter, appendedTo );\n\t\t\t//let divClass = $ (\".\" + title + \"Class\"); //get class\n\t\t\t/** getting the div id name has to follow the same convention\n\t\t\t ** as it was set on the parent class.\n\t\t\t ** this.divName.id        = title + \"Id_\" + counter; //set id name\n\t\t\t ** let divNameId = $ (\"#\" + title + \"Id_\" + counter); //get id name\n\t\t\t ** additional id name customization has to be set at the instance level.\n\t\t\t ** see: imgDiv.fCreateImgDiv (proj.title+\"_Image\", i3, fluidContainerIds...\n\t\t\t ****************************************************************************/\n\t\t\tlet divNameId = $( \"#\" + title + counter ); //get id //(\"#\" + title + \"Id_\" + counter)\n\t\t\tfImgDivStyle( divNameId, imgSrc, divHeight, divWidth, divOverflow );\n\t\t}\n\t}\n\n\t/**----------=====| TextContent Class |=====----------**/\n\t/** Description:\n\t ** TextContent class template is an extension\n\t ** of the CreateElementDiv class.\n\t ** For creating innerHTML divs. ************/\n\t/**------------**/\n\tclass TextContent extends CreateElementDiv {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\tfCreateSimpleTextDiv( name, counter, appendedTo, textString ) {\n\t\t\tsuper.fCreateDiv( name, counter, appendedTo );\n\t\t\tthis.divName.innerHTML = textString;\n\t\t}\n\t\tfCreateTextDiv( name, counter, nameClass, appendedTo, textString, titleString ) {\n\t\t\tsuper.fCreateDiv( name, counter, appendedTo );\n\t\t\t//this.nameName = document.createElement(\"div\");\n\t\t\t//this.nameName.id = nameId + counter; //set id // name + \"Id_\" + counter;\n\t\t\tthis.divName.className = nameClass; //set className\n\t\t\t//let nameNameId     = $ (\"#\" + name + \"Id_\" + counter); //get id\n\t\t\t//$(this.nameName).appendTo(appendedTo);\n\t\t\tthis.divName.innerHTML = textString;\n\t\t\tif ( titleString ) {\n\t\t\t\tthis.divName.title = titleString;\n\t\t\t}\n\n\t\t\t//fDivStyle(divClass, divHeight, divWidth, divOverflow, \"grey\");\n\t\t}\n\t}\n\n\t/**----------=====| CreateElementVideo Class |=====----------**/\n\t/** Description:\n\t ** Class template for creating div specifically for YouTube video.\n\t ***********************/\n\tclass CreateElementVideo {\n\t\tconstructor() {}\n\n\t\tfCreateVideoDiv( videoId, appendedTo, divHeight, divWidth ) {\n\t\t\tlet divName = document.createElement( \"div\" );\n\t\t\tdivName.id = videoId; //set id\n\t\t\tlet divClass = $( \".\" + videoId + \"Class\" ); //get class\n\t\t\tlet divId = $( \"#\" + videoId ); //get id\n\t\t\tfDivStyle( divClass, divHeight, divWidth, \"red\" ); //DELETE COLOR\n\t\t\t$( divName ).appendTo( appendedTo );\n\t\t}\n\t}\n\n\t/**----------=====| CreateElementAny Class |=====----------**/\n\t/** Description:\n\t ** Class template for creating basic \"a\" tag.\n\t ***********************/\n\tclass CreateElementAny {\n\t\tconstructor() {}\n\n\t\t/** Generic method for creating a tag element **/\n\t\tfCreateTag( tagType, className, title, counter, appendedTo ) {\n\t\t\tlet divName = document.createElement( tagType );\n\t\t\tdivName.id = title + \"Id_\" + counter; //set id\n\t\t\tdivName.className = className; //title + \"Class\";\n\t\t\tdivName.href = \"#modalCarousel\";\n\t\t\t//let divNameId     = $ (\"#\" + title + \"Id_\" + counter); //get id\n\t\t\t$( divName ).appendTo( appendedTo );\n\t\t}\n\t}\n\t/**----------=====| CREATE BUTTON ELEMENT CLASS |=====----------**/\n\t/** Description:\n\t ** Class template for creating basic \"BUTTON\" tag.\n\t ***********************/\n\tclass CreateElementButton {\n\t\tconstructor() {}\n\n\t\t/** Generic method for creating a tag element **/\n\t\tfCreateBtn( className, idName, counter, appendedTo, label ) {\n\t\t\tlet divName = document.createElement( \"BUTTON\" );\n\t\t\tdivName.id = idName + \"Id_\" + counter; //set id\n\t\t\tdivName.className = className; //title + \"Class\";\n\t\t\t//divName.href = \"#modalCarousel\";\n\t\t\t//let divNameId     = $ (\"#\" + title + \"Id_\" + counter); //get id\n\t\t\t$( divName ).appendTo( appendedTo );\n\t\t\tlet buttonLabel = document.createTextNode( label );\n\t\t\t$( buttonLabel ).appendTo( divName );\n\t\t}\n\t}\n\tconst createButton = new CreateElementButton();\n\n\t//TEST QUERIES\n\t// console.log(\"outWindowWidth: \", outWindowWidth);\n\t// console.log(\"inWindowWidth: \", inWindowWidth);\n\t// console.log(\"gdContainerWidth: \", gdContainerWidth);\n\n\t// let fScreenQueriesX = () => {\n\t//   //console.log(\"gdContainerWidth:2 \", gdContainerWidth);\n\t//   //let projTitleClass = document.getElementsbyClassName(projTitleClass)\n\t//   if (gdContainerWidth >= \"200px\") {\n\t//     //console.log(\"gdContainerWidth:3 \", gdContainerWidth);\n\t//     //className = $(\".\" + className);\n\t//     //let className = document.getElementsbyClassName(className)\n\t//     let projTitleClass = $(\".projTitleClass\");\n\t//     //console.log(\"projTitleClass: \", projTitleClass);\n\t//     projTitleClass.css({\n\t//       \"font-size\": \"1em\",\n\t//       \"color\": \"red\"\n\t//     })\n\t//   } else {\n\t//     //console.log(\"gdContainerWidth:4 \", gdContainerWidth);\n\t//     let projTitleClass = $(\".projTitleClass\");\n\t//     projTitleClass.css({\n\t//       \"font-size\": \"3em\",\n\t//       \"color\": \"red\"\n\t//     })\n\t//   }\n\t// }\n\t//fScreenQueries();\n\t//projTitleClass = $(\".projTitleClass\");\n\t// fScreenQueries(projTitleClass);\n\t// projTitleClass.css({\n\t//   \"font-size\": \"1em\",\n\t//   \"color\": \"red\"\n\t// })\n\t//console.log(\"projTitleClass: \", projTitleClass);\n\n\t/**----------===| COLUMNS PERCENTAGE |===----------**/\n\tlet fIntroColumnQueriesXX = ( screenWidth, elemWidth, columnPercentage ) => {\n\t\t// console.log(\"screenWidth: \", screenWidth);\n\t\t// console.log(\"elemWidth: \", elemWidth);\n\t\t// console.log(\"columnPercentage: \", columnPercentage);\n\t\tif ( screenWidth <= 500 ) {\n\t\t\telemWidth = 95;\n\t\t} else {\n\t\t\telemWidth = columnPercentage\n\t\t}\n\t};\n\t// /**-----------=====| anim.fAnimateHeightWidth Function |=====-----------**/\n\t// /** Descriptions:\n\t//  ** Animates element's height and width\n\t//  **----------------------------------------------------------------**/\n\t// let anim.fAnimateHeightWidth = function(elem, eHeight, eWidth, animTym) {\n\t//   //tMx.to (elem, animTym, {css: {height: eHeight, width: eWidth}, ease: easePower});\n\t//   tMx.to(elem, animTym, {\n\t//     height: eHeight,\n\t//     width: eWidth,\n\t//     ease: easePower\n\t//   });\n\t// };\n\n\t// let fFontSizer = function(elem, sizeFont) {\n\t//   tMx.to(elem, animTymSlow, {\n\t//     fontSize: sizeFont,\n\t//     ease: easePower\n\t//   });\n\t// // tMx.to(elem, animTymSlow, {\n\t// //   scale: sizeFont,\n\t// //   ease: easePower\n\t// // });\n\t// };\n\n\t// class TextQueriesClass {\n\t//   constructor() {\n\t//     //   this.gdContnrWidth = gdContnrWidth;\n\t//     //   this.elem = elem;\n\t//     //   this.smlFntSize = smlFntSize;\n\t//     //   this.midFntSize = midFntSize;\n\t//     //   this.lrgFntSize = lrgFntSize;\n\t//   }\n\t//\n\t//   fTextQueries(gdContnrWidth, elem, smlFntSize, midFntSize, lrgFntSize) {\n\t//     //console.log(\"gdContnrWidth: \", gdContnrWidth);\n\t//     if (gdContnrWidth <= 400) {\n\t//       fFontSizer(elem, smlFntSize); //\"4em\"\n\t//       elem.css({\n\t//         \"padding-left\": \"20px\"\n\t//       })\n\t//     //fFontSizer(logoSubTitle, \".8em\");\n\t//     } else if (gdContnrWidth > 400 && gdContnrWidth <= 600) {\n\t//       fFontSizer(elem, midFntSize); //\"4em\"\n\t//       elem.css({\n\t//         \"padding-left\": \"20px\"\n\t//       })\n\t//     // fFontSizer(logoTitle, \"7em\");\n\t//     // fFontSizer(logoSubTitle, \"1.2em\");\n\t//     } else {\n\t//       fFontSizer(elem, lrgFntSize); //\"4em\"\n\t//       elem.css({\n\t//         \"padding-left\": \"0px\"\n\t//       })\n\t//     // fFontSizer(logoTitle, \"8em\");\n\t//     // fFontSizer(logoSubTitle, \"1.4em\");\n\t//     }\n\t//   }\n\t// }\n\tlet logoText = new twoKolumns.TextQueriesClass();\n\tlet headerText = new twoKolumns.TextQueriesClass();\n\n\t// class ScreenQueriesClass {\n\t//   constructor() {\n\t//     //this.ColumnPercentage;\n\t//     //console.log(\"constructor: this.ColumnPercentage: \", this.ColumnPercentage);\n\t//   }\n\t//   fScreenQueries(gdContnrWidth, divName) {\n\t//     //console.log(\"fScreenQueries: this.ColumnPercentage: \", this.ColumnPercentage);\n\t//     // if (gdContnrWidth < 400) {\n\t//     //   fFontSizer(logoTitle, \"4em\");\n\t//     //   fFontSizer(logoSubTitle, \".8em\");\n\t//     //   this.ColumnPercentage = 95;\n\t//     // } else if (gdContnrWidth >= 400 && gdContnrWidth <= 500) {\n\t//     //   fFontSizer(logoTitle, \"7em\");\n\t//     //   fFontSizer(logoSubTitle, \"1.2em\");\n\t//     //   this.ColumnPercentage = 90;\n\t//     // } else {\n\t//     //   fFontSizer(logoTitle, \"8em\");\n\t//     //   fFontSizer(logoSubTitle, \"1.4em\");\n\t//     //   this.ColumnPercentage = columnPercentage;\n\t//     // }\n\t//     //console.log(\"this.ColumnPercentage: \", this.ColumnPercentage);\n\t//     console.log(\"gdContnrWidth: \", gdContnrWidth);\n\t//     if (gdContnrWidth <= 600) {\n\t//       console.log(\"<= 600\");\n\t//       this.ColumnPercentage = 95;\n\t//     // let rightColumnDivWidth = Math.round(gdContnrWidth * (this.ColumnPercentage / 100));\n\t//     // console.log(\"rightColumnDivWidth: \", rightColumnDivWidth);\n\t//     // divNameWidth = divName\n\t//     } else {\n\t//       console.log(\"else > 600\");\n\t//       this.ColumnPercentage = logoTitleColumnPercent;\n\t//     }\n\t//   }\n\t// }\n\t// let logoColumn = new ScreenQueriesClass();\n\n\t/**----------=====| OPEN TO NEW WINDOW CLASS |=====----------**/\n\t/** DESCRIPTION:\n\t *  To open new html blank window\n\t *  Instead of using href\n\t *  location.href doesn't offer opening to a seperate window\n\t *  window.open does but it's a pop-up window and end users can filter it\n\t *------------------------------------------------------------------------*/\n\tclass OpenWindow {\n\t\tconstructor() {}\n\n\t\tfWindowOpen( idName, pageToOpen ) {\n\t\t\tidName.click( () => {\n\t\t\t\t//console.log(\"clicked!\")\n\t\t\t\t// location.href = \"http://www.google.com\";\n\t\t\t\twindow.open( pageToOpen, '_blank' ); //, \"toolbar=no,scrollbars=yes,resizable=yes,top=500,left=500,width=400,height=400\");\n\t\t\t} )\n\t\t}\n\t}\n\tconst openLink = new OpenWindow();\n\n\t//openLink.fWindowOpen(idName, pageToOpen)\n\n\t/**----------=====| fWindowOpen2: FUNCTION FOR OPENING TEXT LINKS |=====----------**/\n\t/**DESCRIPTION: To open page link from the image description link\n\t--------------------------------------------------------------------**/\n\tlet glyphiconXpand;\n\tlet fWindowOpen2 = ( idName, pageToOpen, fs, scrnHt, scrnWt ) => {\n\t\t//console.log(\"idName: \", idName);\n\t\t//console.log(\"pageToOpen: \", pageToOpen);\n\t\tif ( pageToOpen === \"noLink\" ) {\n\t\t\t//link is null!\n\t\t} else {\n\t\t\tidName.mouseover( () => {\n\t\t\t\tidName.css( {\n\t\t\t\t\t\"color\": \"Orange\",\n\t\t\t\t\t\"cursor\": \"pointer\",\n\t\t\t\t\t\"text-decoration\": \"none\"\n\t\t\t\t} )\n\t\t\t\tglyphiconXpand.css( {\n\t\t\t\t\t\"color\": \"Orange\",\n\t\t\t\t\t\"cursor\": \"pointer\",\n\t\t\t\t\t\"text-decoration\": \"none\"\n\t\t\t\t} )\n\t\t\t} )\n\t\t\tidName.mouseout( () => {\n\t\t\t\tidName.css( {\n\t\t\t\t\t\"color\": \"white\"\n\t\t\t\t} )\n\t\t\t\tglyphiconXpand.css( {\n\t\t\t\t\t\"color\": \"white\",\n\t\t\t\t\t\"opacity\": \".90\"\n\t\t\t\t} )\n\t\t\t} )\n\t\t\tidName.click( () => {\n\t\t\t\tif ( scrnHt === \"screen.height\" ) {\n\t\t\t\t\tscrnHt = window.screen.height;\n\t\t\t\t\tconsole.log( \"scrnHt: \", scrnHt );\n\t\t\t\t\tconsole.log( typeof scrnHt );\n\t\t\t\t}\n\t\t\t\tif ( scrnWt === \"screen.width\" ) {\n\t\t\t\t\tscrnWt = window.screen.width;\n\t\t\t\t\tconsole.log( \"scrnWt: \", scrnWt );\n\t\t\t\t}\n\t\t\t\t//console.log(\"clicked!\")\n\t\t\t\t// location.href = \"http://www.google.com\";\n\t\t\t\t//window.open(pageToOpen, '_blank'); //, \"toolbar=no,scrollbars=yes,resizable=yes,top=500,left=500,width=400,height=400\");\n\t\t\t\t//window.open(pageToOpen, \"_blank\", \"fs\", \"fullscreen=yes\")\n\t\t\t\tif ( fs === \"yes\" ) {\n\t\t\t\t\t//window.open(pageToOpen, '_blank', 'height=' + screen.height + ', width=' + screen.width);\n\t\t\t\t\twindow.open( pageToOpen, '_blank', 'height=' + scrnHt + ', width=' + scrnWt );\n\t\t\t\t\tconsole.log( \"scrnHt: \", scrnHt );\n\t\t\t\t\tconsole.log( \"scrnWt: \", scrnWt );\n\n\t\t\t\t} else {\n\t\t\t\t\twindow.open( pageToOpen, '_blank' );\n\t\t\t\t\tconsole.log( \"scrnHt: \", scrnHt );\n\t\t\t\t\tconsole.log( \"scrnWt: \", scrnWt );\n\t\t\t\t}\n\t\t\t} )\n\t\t}\n\t}\n\n\t/**----------=====| FUNCTION FOR ROLLOVER AND ROLLOUT |=====----------**/\n\tfunction fRollEvents( elem, origColor ) {\n\t\tconsole.log( \"elem: \", elem );\n\t\telem.css( {\n\t\t\t\"color\": origColor\n\t\t} )\n\t\telem.mouseover( () => {\n\t\t\telem.css( {\n\t\t\t\t\"color\": \"Orange\",\n\t\t\t\t\"cursor\": \"pointer\",\n\t\t\t\t\"text-decoration\": \"none\"\n\t\t\t} )\n\t\t} )\n\t\telem.mouseout( () => {\n\t\t\telem.css( {\n\t\t\t\t\"color\": origColor,\n\t\t\t\t\"text-decoration\": \"none\"\n\t\t\t} )\n\t\t} )\n\t}\n\n\t/**------------=====| fTempBorderStyle CSS |=====------------**/\n\tlet fTempBorderStyle = function( divName ) {\n\t\t//console.log(\"divName: \", divName);\n\t\tdivName.css( {\n\t\t\t\"border\": \"1px solid red\"\n\t\t} );\n\t};\n\n\n\n\n\t/**----------=====| END OF CLASS DECLARATIONS |=====----------**/\n\n\t/**----------=====| CLASS INSTANCES |=====----------**/\n\t//const projectContainer = new ProjectDiv();\n\t//const columnDiv = new ColumnDiv();\n\t//let rightColumn = new ColumnDiv ();\n\t//let imgContainer = new ColumnDiv ();\n\t//const imgDiv = new ImgDiv();\n\tconst textDiv = new TextContent();\n\n\tconst tagElement = new CreateElementAny();\n\t//const rightArrowShader = new CreateElementAny();\n\t//const leftArrow = new CreateElementAny();\n\t//const rightArrow = new CreateElementAny();\n\n\tconst youTubeVideo = new CreateElementVideo();\n\n\t/**----------=====| FUNCTION TO OPEN|CLOSE TOGGLE : CODING THIS SITE |=====----------**/\n\tlet fToggleBtn = ( btn, targetElem ) => {\n\t\tbtn.click( () => {\n\t\t\ttargetElem.slideToggle( \"slow\" );\n\t\t} );\n\t}\n\n\t/**----------=====| FUNCTION FOR CONVERTING HEX COLOR TO RGBA |=====----------**/\n\t/** http://jsfiddle.net/subodhghulaxe/t568u/ **/\n\t//function fConvertHex(hex, opacity) {\n\tlet fConvertHex = ( hex, opacity ) => {\n\t\thex = hex.replace( '#', '' );\n\t\tlet r = parseInt( hex.substring( 0, 2 ), 16 );\n\t\tlet g = parseInt( hex.substring( 2, 4 ), 16 );\n\t\tlet b = parseInt( hex.substring( 4, 6 ), 16 );\n\n\t\tlet result = 'rgba(' + r + ',' + g + ',' + b + ',' + opacity / 100 + ')';\n\t\treturn result;\n\t}\n\n\t/*********************( PROMISE AJAX • START •  JSON )*********************/\n\tif ( window.Promise ) {\n\t\tconsole.log( 'Promise found' );\n\t}\n\n\t/**----------===| Miscellaneous variables: Clean up later |===----------**/\n\tconst additionalHeight = 60;\n\tconst arbitraryNum = 10;\n\n\tlet date = new Date();\n\tconsole.log( date );\n\n\t/**----------------------------------------------------------------------------------------------**/\n\t/**--------------------============| ~ PROMISE • AJAX • JSON ~  |============--------------------**/\n\t/**----------------------------------------------------------------------------------------------**/\n\t// console.log(`\n\t// /**|======================================================|**/\n\t// /**|               PROMISE • AJAX • JSON                  |**/\n\t// /**|        ELEMENTS CREATION & DATA ACQUISITIONS         |**/\n\t// /**|======================================================|**/\n\t// `);\n\tlet codingThisSiteId;\n\tlet logoContainerDivId;\n\tlet logoLeftColDivId;\n\tlet logoRightColDivId;\n\tlet logoTitleColumnPercent;\n\tlet logoTitleClass;\n\tlet logoSubTitleClass;\n\tlet logoTitleId;\n\tlet logoSubTitleId;\n\tlet introCalloutId;\n\tlet toggleBtn;\n\t//let codingThisSiteId;\n\n\n\tlet introImageIds;\n\tlet myIntroImage;\n\tlet introBackgroungImage;\n\tlet rightColumnHeight;\n\n\tlet randColorTheme;\n\n\tconst fIntroAjax = () => {\n\t\t\tlet promise = $.get( \"./js/json/introImages.json\" );\n\t\t\tpromise.then( function( data ) {\n\t\t\t\tlet jx = 0;\n\t\t\t\tfor ( let introData of data.GDSiteIntro ) {\n\t\t\t\t\t/**----------===| CREATE CODING CONTAINER DIV INSIDE INTROCONTAINER |===----------**/\n\t\t\t\t\tcreateDiv.fCreateBasicElement( introData.title + \"_CodingContainer\", jx, \"codingContainer\", introContainer );\n\t\t\t\t\tlet codingContainerId = $( \"#\" + introData.title + \"_CodingContainer\" + jx ); //GET ID\n\t\t\t\t\t/**----------===| CREATE CODING TEXT DIV INSIDE CODINGCONTAINER |===----------**/\n\t\t\t\t\tcreateDiv.fCreateBasicElement( introData.title + \"_CodingThisSite\", jx, \"codingThisSite\", codingContainerId );\n\t\t\t\t\tcodingThisSiteId = $( \"#\" + introData.title + \"_CodingThisSite\" + jx ); //GET ID\n\t\t\t\t\tconst codingThisSite = $( \".codingThisSite\" ); //GET CLASSNAME\n\t\t\t\t\tlet codingThisSiteHeight = codingThisSiteId.height();\n\t\t\t\t\tfBasicDivStyle( codingThisSiteId, \"auto\", gdContainerWidth, \"absolute\" ); //CSS\n\t\t\t\t\tlet centerOnScreenY = ( inWindowHeight / 2 ) - ( codingThisSiteHeight / 2 );\n\t\t\t\t\tcodingThisSiteId.css( {\n\t\t\t\t\t\t\t\"margin-top\": centerOnScreenY\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t/**----------===| CREATE CODING PARAGRAPHS |===----------**/\n\t\t\t\t\ttextDiv.fCreateTextDiv( \"codingTitle\", jx, \"codingTitleClass\", codingThisSiteId, introData.codingTitle );\n\t\t\t\t\ttextDiv.fCreateTextDiv( \"codingDescription\", jx, \"codingDescriptionClass\", codingThisSiteId, introData.codingThisSite );\n\n\t\t\t\t\t/**----------===| CREATE LOGO CONTAINER DIV INSIDE INTROCONTAINER DIV |===----------**/\n\t\t\t\t\tcreateDiv.fCreateBasicElement( introData.title + \"_LogoContainer\", jx, \"logoContainer\", introContainer );\n\t\t\t\t\tlogoContainerDivId = $( \"#\" + introData.title + \"_LogoContainer\" + jx ); //GET ID\n\t\t\t\t\t/**----------===| LOGO TITLE CONTAINER COLUMNS PERCENTAGE |===----------**/\n\t\t\t\t\tlogoTitleColumnPercent = introData.logoTitleColumnPercent; //json supplied\n\t\t\t\t\ttwoColumnsIntroSection.fTwoColumnsQueries( gdContainerWidth, logoTitleColumnPercent, 0, 0 );\n\n\t\t\t\t\t/**----------===| CREATE LOGO TITLE LEFT COLUMNS |===----------**/\n\t\t\t\t\tcreateDiv.fCreateBasicElement( introData.title + \"_IntroLeftColmn\", jx, \"introLeftColumnClass\", logoContainerDivId );\n\t\t\t\t\tlogoLeftColDivId = $( \"#\" + introData.title + \"_IntroLeftColmn\" + jx ); //GET ID\n\t\t\t\t\tfBasicDivStyle( logoLeftColDivId, arbitraryNum, twoColumnsIntroSection.LeftColumn, \"relative\" ); //CSS\n\n\t\t\t\t\t/**----------===| CREATE LOGO TITLE RIGHT COLUMNS |===----------**/\n\t\t\t\t\tcreateDiv.fCreateBasicElement( introData.title + \"_IntroRightColmn\", jx, \"introRightColumnClass\", logoContainerDivId );\n\t\t\t\t\tlogoRightColDivId = $( \"#\" + introData.title + \"_IntroRightColmn\" + jx ); //GET ID\n\t\t\t\t\tfBasicDivStyle( logoRightColDivId, \"auto\", \"auto\", \"relative\" ); //CSS\n\n\t\t\t\t\t// let introRightColumnClass = $(\".introRightColumnClass\");\n\t\t\t\t\t// console.log(\"introRightColumnClass :\", introRightColumnClass);\n\t\t\t\t\t// let introRightColumnHeight = introRightColumnClass.height();\n\t\t\t\t\t// console.log(\"introRightColumnHeight :\", introRightColumnHeight);\n\t\t\t\t\t//TEMP\n\t\t\t\t\t// logoLeftColDivId.css({\n\t\t\t\t\t//   \"border-top\": \"2px solid red\"\n\t\t\t\t\t// })\n\t\t\t\t\t// logoRightColDivId.css({\n\t\t\t\t\t//   \"border-top\": \"2px solid yellowGreen\",\n\t\t\t\t\t//   \"border-bottom\": \"1px solid cyan\"\n\t\t\t\t\t// })\n\n\t\t\t\t\t/**----------===| CREATE LOGO TITLES |===----------**/\n\t\t\t\t\ttextDiv.fCreateTextDiv( introData.title + \"_LogoTitle\", jx, \"logoTitleClass\", logoRightColDivId, introData.introTitle ); //R.LLOYD GONZALES\n\t\t\t\t\tlogoTitleId = $( \"#\" + introData.title + \"_LogoTitle\" + jx );\n\t\t\t\t\tlogoText.fTextQueries( gdContainerWidth, logoTitleId, logoTitleSmlFontSize, logoTitleMidFontSize, logoTitleLrgFontSize );\n\n\t\t\t\t\t/**----------===| CREATE INTRO SUB-TITLES |===----------**/\n\t\t\t\t\ttextDiv.fCreateTextDiv( introData.title + \"_LogoSubTitle\", jx, \"logoSubTitleClass\", logoRightColDivId, introData.intoSubTitle ); //Passionate about Arts, Designs & Coding\n\t\t\t\t\tlogoSubTitleId = $( \"#\" + introData.title + \"_LogoSubTitle\" + jx );\n\t\t\t\t\tlogoText.fTextQueries( gdContainerWidth, logoSubTitleId, logoSubTitleSmlFontSize, logoSubTitleMidFontSize, logoSubTitleLrgFontSize );\n\n\t\t\t\t\t/**----------===| CREATE CALLOUT |===----------**/\n\t\t\t\t\ttextDiv.fCreateTextDiv( introData.title + \"_Callout\", jx, \"calloutClass\", logoRightColDivId, introData.callout ); //Portfolio: Scroll Down\n\t\t\t\t\tintroCalloutId = $( \"#\" + introData.title + \"_Callout\" + jx );\n\t\t\t\t\tlogoText.fTextQueries( gdContainerWidth, introCalloutId, introCalloutFontSize, introCalloutFontSize, introCalloutFontSize );\n\n\t\t\t\t\t/**----------===| TOGGLE \"CODE THIS SITE\" DESCRIPTION |===----------**/\n\n\t\t\t\t\t/**----------===| CREATE BUTTON ELEMENT |===----------**/\n\t\t\t\t\tcreateButton.fCreateBtn( \"btn btn-link codingBtn\", \"_Btn\", jx, logoRightColDivId, \"coding this site\" ); //introFluidContainer\n\t\t\t\t\ttoggleBtn = $( \".codingBtn\" ); //get clasname\n\t\t\t\t\tconst closeCoding = $( \".closeCoding\" ); //get clasname\n\t\t\t\t\tlogoText.fTextQueries( gdContainerWidth, toggleBtn, codingBtnFontSize, codingBtnFontSize, codingBtnFontSize );\n\t\t\t\t\tlet toggleBtnId = $( \"#\" + introData.title + \"_Btn\" + jx );\n\t\t\t\t\tlogoText.fTextQueries( gdContainerWidth, toggleBtn, codingBtnFontSize, codingBtnFontSize, codingBtnFontSize );\n\n\t\t\t\t\t/**----------===| LOGO CONTAINER: BASIC CSS |===----------**/\n\n\t\t\t\t\trightColumnHeight = logoRightColDivId.height(); // + 30;\n\n\t\t\t\t\tfBasicIntroStyle( logoContainerDivId, \"auto\", gdContainerWidth );\n\t\t\t\t\tlogoContainerDivId.css( {\n\t\t\t\t\t\t//\"border\": \"1px solid pink\",\n\t\t\t\t\t\t\"margin-top\": inWindowHeight - ( rightColumnHeight + 40 )\n\t\t\t\t\t} )\n\n\t\t\t\t\tfToggleBtn( toggleBtn, codingThisSite );\n\t\t\t\t\tfToggleBtn( closeCoding, codingThisSite );\n\t\t\t\t\tfRollEvents( toggleBtn, \"#949494\" );\n\t\t\t\t\tfRollEvents( closeCoding, \"#5780a2\" );\n\n\t\t\t\t\t/**----------===| CREATE IMAGE DIV INSIDE INTROFLUIDCONTAINER |===----------**/\n\t\t\t\t\timageBasicDiv.fCreateBasicElement( introData.title + \"_IntroImg\", jx, \"introDivClass\", introFluidContainer );\n\t\t\t\t\t/**----------===| NEW IMAGE CREATION |===----------**/\n\t\t\t\t\tmyIntroImage = new Image();\n\t\t\t\t\tlet imagesPath = \"./images/\" + introData.title + \"/\";\n\t\t\t\t\t/**-----====={ Load image randomly }=====-----**/\n\t\t\t\t\tvar randImg = introData.images[ Math.floor( introData.images.length * Math.random() ) ];\n\t\t\t\t\tmyIntroImage.src = imagesPath + randImg.imgName; //introData.images[0].imgName; //randImg;\n\t\t\t\t\t/**----------===| IMAGE DIV: IDS |===----------**/\n\t\t\t\t\tintroImageIds = $( \"#\" + introData.title + \"_IntroImg\" + jx );\n\t\t\t\t\tconsole.log( \"introImageIds: \", introImageIds );\n\n\t\t\t\t\t/**----------===| COLOR THEME: INTRO SUB TITLE |===----------**/\n\t\t\t\t\trandColorTheme = randImg.colorTheme;\n\t\t\t\t\tlogoSubTitleId.css( {\n\t\t\t\t\t\t\t\"color\": randColorTheme\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t/**----------===| COLOR THEME: INTRO LOGO CONTAINER |===----------**/\n\t\t\t\t\tlet hex2Rgb = fConvertHex( randColorTheme, 50 )\n\t\t\t\t\tlogoContainerDivId.css( {\n\t\t\t\t\t\t\"border-top\": \"4px double \" + hex2Rgb,\n\t\t\t\t\t\t\"border-bottom\": \"6px double \" + hex2Rgb\n\t\t\t\t\t} );\n\n\t\t\t\t\t/**----------===| IMAGE DIV: CSS |===----------**/\n\t\t\t\t\t/*        Populating the div with image        *\n\t\t\t\t\t **--------------------------------------------**/\n\t\t\t\t\t// let inWindowHeight = window.innerHeight; // / 2;\n\t\t\t\t\t// let inWindowWidth = window.innerWidth;\n\t\t\t\t\t// let inWindowWidth = window.innerWidth;\n\t\t\t\t\t// let inWindowHeight = window.innerHeight;\n\t\t\t\t\tfIntroImageStyle( introImageIds, inWindowHeight, inWindowWidth, myIntroImage.src );\n\t\t\t\t}\n\t\t\t} )\n\t\t}\n\t\t/**----------===| INVOKE FUNCTION |===----------**/\n\t\t//fIntroAjax();\n\n\t//let logoContainer = $(\".logoContainer\");\n\t// function toggleClass() {\n\t//   //$(\".\" + divClass).toggle();\n\t//   logoContainer.toggle();\n\t//   logoContainer.css({\n\t//     \"display\": \"inline\"\n\t//   });\n\t// }\n\n\n\n\tconst fRunAjax = () => {\n\t\tlet promise = $.get( \"./js/json/ajaxData2_simple.json\" );\n\t\t//let promise = $.get(\"./js/json/ajaxData2_2ProjectsV.json\");\n\t\t//let promise = $.get(\"./js/json/ajaxData2_EvenSimpler.json\");\n\t\t//let promise = $.get(\"./js/json/ajaxData2_1Project.json\");\n\t\t//let promise = $.get(\"./js/json/ajaxData2_2Projects.json\");\n\n\t\tpromise.then( function( data ) {\n\t\t\t\tlet j1 = 0;\n\t\t\t\tlet j2 = 0;\n\t\t\t\tlet j3 = 0;\n\n\t\t\t\tconsole.log( `\n      /**|===============================|**/\n      /**|      SECTIONS JSON LOOP       |**/\n      /**|===============================|**/\n      data.GDSite: ${data.GDSite[0].projects[0].images[0].linkURL}\n      ` );\n\t\t\t\t/**----------===| LINKS TO OPEM TO ANOTHER WINDOW |===----------**/\n\t\t\t\t//   let nycBikeFlashSampleXX = $('#nycBikeFlashSampleXX');\n\t\t\t\t//   //let nycBikeFlashSampleX = $(\"#\" + data.GDSite[0].projects[0].images[0].linkURL);\n\t\t\t\t//   //   let nycBikeFlashSample = $(nycBikeFlashSampleX)\n\t\t\t\t//   //   console.log(\"nycBikeFlashSample: \", nycBikeFlashSample);\n\t\t\t\t//   //fRollEvents(nycBikeFlashSample, \"white\");\n\t\t\t\t//   fWindowOpen2(nycBikeFlashSampleXX, \"http://www.google.com\");\n\t\t\t\t//\n\t\t\t\t//   let idTest = (data.GDSite[0].projects[0].images[0].linkURL);\n\t\t\t\t//   //let idTest2 = idTest.toString();\n\t\t\t\t//   let idTest2 = new String(idTest);\n\t\t\t\t//   console.log(\"idTest: \", idTest);\n\t\t\t\t//   console.log(idTest2 instanceof String);\n\t\t\t\t//   //let nycBikeFlashSampleX = document.getElementById(idTest2);\n\t\t\t\t//   let nycBikeFlashSampleX = $(\"#\" + idTest2);\n\t\t\t\t//   console.log(\"nycBikeFlashSampleX: \", nycBikeFlashSampleX);\n\t\t\t\t//   let imgDescription_1 = $(\"#imgDescription_1\")\n\t\t\t\t//   imgDescription_1.css({\n\t\t\t\t//     \"border\": \"1px solid white\"\n\t\t\t\t//   })\n\t\t\t\t//   let nycBikeFlashSample = $(data.GDSite[0].projects[0].images[0].linkURL);\n\t\t\t\t//   fRollEvents(nycBikeFlashSample, \"white\");\n\n\t\t\t\t//   let personalFreshLinkId = $(\"#personalFreshLinkId\");\n\t\t\t\t//   let personalFreshLink = data.GDSite[0].projects[2].images[0].linkURL;\n\t\t\t\t//   console.log(\"personalFreshLinkId: \", personalFreshLinkId);\n\t\t\t\t//   console.log(\"personalFreshLink: \", personalFreshLink);\n\t\t\t\t//   fWindowOpen2(personalFreshLinkId, personalFreshLink);\n\n\t\t\t\t//TEMP fScreenQueries();\n\t\t\t\tfor ( let sect of data.GDSite ) {\n\t\t\t\t\tj1++;\n\t\t\t\t\tconsole.log( `Section j1: ${j1} ${sect.title}` );\n\t\t\t\t\t// /**----------===| LINKS TO OPEM TO ANOTHER WINDOW |===----------**/\n\t\t\t\t\t// let nycBikeFlashSample = $('#nycBikeFlashSample');\n\t\t\t\t\t// fRollEvents(nycBikeFlashSample, \"white\");\n\t\t\t\t\t//\n\t\t\t\t\t// let akonFlashSample = $('#akonFlashSample');\n\t\t\t\t\t// fRollEvents(akonFlashSample, \"white\");\n\n\t\t\t\t\t//openLink.fWindowOpen(nycBikeFlashSample, \"http://www.google.com\");\n\t\t\t\t\t//fWindowOpen2(nycBikeFlashSample, \"http://www.google.com\");\n\n\t\t\t\t\t// let akonFlashSample = $('#akonFlashSample');\n\t\t\t\t\t// console.log(\"akonFlashSample: \", akonFlashSample);\n\t\t\t\t\t// fRollEvents(akonFlashSample, \"white\");\n\t\t\t\t\t// fWindowOpen2(akonFlashSample, \"http://www.rlgonzales.com/Scroll/images/ANIMATIONS/Flash/Akon/\");\n\n\t\t\t\t\taSectionsCount[ aSectionsCount.length ] = sect; //PUSH\n\n\t\t\t\t\t/**----------===| INVOKE SECTION COLUMNS |===----------**/\n\t\t\t\t\ttwoColumnsHeaderSection.fTwoColumnsQueries( gdContainerWidth, sect.headerRightColumnPercent, arbitraryNum, arbitraryNum );\n\t\t\t\t\taSectionsRightColumnPercent[ aSectionsRightColumnPercent.length ] = sect.headerRightColumnPercent;\n\n\t\t\t\t\t/**----------===| CREATE SECTION HEADER CONTAINER |===----------------------------------------**/\n\t\t\t\t\tcreateDiv.fCreateBasicElement( sect.title, j1, \"sectionHeaderClass\", gdContainer );\n\t\t\t\t\tlet sectDivIds = $( \"#\" + sect.title + j1 );\n\t\t\t\t\tfBasicDivStyle( sectDivIds, \"auto\", gdContainerWidth, \"relative\" );\n\t\t\t\t\taSectionHeaders[ aSectionHeaders.length ] = sectDivIds;\n\n\t\t\t\t\t/**----------===| CREATE SECTION HEADER DIVIDER |===----------------------------------------**/\n\t\t\t\t\tcreateDiv.fCreateBasicElement( \"sectDivider\", j1, \"sectionDividerClass\", sectDivIds );\n\t\t\t\t\tlet sectDividerIds = $( \"#\" + \"sectDivider\" + j1 );\n\t\t\t\t\t/**----------===| COLOR THEME: DIVIDER |===----------**/\n\t\t\t\t\tsectDividerIds.css( {\n\t\t\t\t\t\t\"background-color\": randColorTheme\n\t\t\t\t\t} )\n\n\t\t\t\t\t/**----------===| CREATE HEADER LEFT COLUMN |===------------------------------------------------------------**/\n\t\t\t\t\tcreateDiv.fCreateBasicElement( sect.title + \"_Left\", j1, \"sectionHeaderLeftColmnClass\", sectDivIds );\n\t\t\t\t\tlet sectLeftIds = $( \"#\" + sect.title + \"_Left\" + j1 );\n\t\t\t\t\tfBasicDivStyle( sectLeftIds, arbitraryNum, twoColumnsHeaderSection.LeftColumn, \"relative\" );\n\t\t\t\t\taSectionHeadrLeftColmn[ aSectionHeadrLeftColmn.length ] = sectLeftIds;\n\n\t\t\t\t\t/**----------===| CREATE HEADER RIGHT COLUMN |===-------------------------------------------------------------**/\n\t\t\t\t\tcreateDiv.fCreateBasicElement( sect.title + \"_Right\", j1, \"sectionHeaderRightColmnClass\", sectDivIds );\n\t\t\t\t\tlet sectRightIds = $( \"#\" + sect.title + \"_Right\" + j1 );\n\t\t\t\t\tfBasicDivStyle( sectRightIds, \"auto\", twoColumnsHeaderSection.RightColumn, \"relative\" );\n\t\t\t\t\taSectionHeadrRightColmn[ aSectionHeadrRightColmn.length ] = sectRightIds;\n\n\t\t\t\t\t/**----------===| Sections Header Title Text |===----------**/\n\t\t\t\t\tsectionHeaderText.fBasicTextContent( sect.title + \"_Text\", j1, \"sectionHeaderTxtContentClass\", sectRightIds, sect.sectionTitle );\n\t\t\t\t\tlet sectionTitleIds = $( \"#\" + sect.title + \"_Text\" + j1 );\n\t\t\t\t\tfBasicDivStyle( sectionTitleIds, \"auto\", twoColumnsHeaderSection.RightColumn, \"relative\" );\n\t\t\t\t\theaderText.fTextQueries( gdContainerWidth, sectionTitleIds, headerSmlFontSize, headerMidFontSize, headerLrgFontSize );\n\t\t\t\t\taSectionHeadrTitles[ aSectionHeadrTitles.length ] = sectionTitleIds;\n\n\t\t\t\t\tfor ( let proj of sect.projects ) {\n\t\t\t\t\t\tj2++;\n\t\t\t\t\t\tconsole.log( `\n              Project j2: ${j2} ${proj.title}` );\n\t\t\t\t\t\t/**----------===| Divider tag for DOM and style inspection in the browser dev view for testing |===----------**/\n\t\t\t\t\t\ttagElement.fCreateTag( \"i\", \"Divider:-------------------====•\", proj.title, j2, gdContainer );\n\t\t\t\t\t\t/**----------===| PUSH TO ARRAY: PROJECT COUNT |===----------**/\n\t\t\t\t\t\taProjectsCount[ aProjectsCount.length ] = proj;\n\t\t\t\t\t\t/**----------===| INVOKE PROJECT COLUMNS |===----------**/\n\t\t\t\t\t\ttwoColumnsImgProjects.fTwoColumnsQueries( gdContainerWidth, proj.imgRightColumnPercent, proj.imagesWidth, proj.imagesHeight );\n\t\t\t\t\t\t/**----------===| PUSH TO ARRAY: PROJECT RIGHT COLUMNS |===----------**/\n\t\t\t\t\t\taProjectRightColumnPercent[ aProjectRightColumnPercent.length ] = proj.imgRightColumnPercent;\n\t\t\t\t\t\taImagesOrigWidth[ aImagesOrigWidth.length ] = proj.imagesWidth;\n\t\t\t\t\t\taImagesOrigHeight[ aImagesOrigHeight.length ] = proj.imagesHeight;\n\n\t\t\t\t\t\t/**----------===| CREATE PROJECT IMAGE CONTAINER |===----------**/\n\t\t\t\t\t\tcreateDiv.fCreateBasicElement( proj.title + \"_ProjContainer\", j2, \"projectContainerClass\", gdContainer );\n\t\t\t\t\t\t/**----------===| Project Container Ids |===----------**/\n\t\t\t\t\t\tconst projContainerIds = $( \"#\" + proj.title + \"_ProjContainer\" + j2 );\n\t\t\t\t\t\t/**p----------===| Project Container: Basic Style |===----------**/\n\t\t\t\t\t\tfBasicDivStyle( projContainerIds, \"auto\", gdContainerWidth ); // ID, HEIGHT, WID, \"relative\"TH\n\t\t\t\t\t\t/**----------===| push to array use for animation |===----------**/\n\t\t\t\t\t\taProjContainerIds[ aProjContainerIds.length ] = projContainerIds;\n\n\t\t\t\t\t\t/**----------===| CREATE PROJECT IMAGE CONTAINER: LEFT COLUMN |===----------**/\n\t\t\t\t\t\tcreateDiv.fCreateBasicElement( proj.title + \"_Left\", j2, \"projectLeftColmnClass\", projContainerIds );\n\t\t\t\t\t\t/**----------===| Left Column Ids |===----------**/\n\t\t\t\t\t\tlet projContainrLeftColDivIds = $( \"#\" + proj.title + \"_Left\" + j2 );\n\t\t\t\t\t\t/**p----------===| Left Column: Basic Style |===----------**/\n\t\t\t\t\t\tfBasicDivStyle( projContainrLeftColDivIds, arbitraryNum, twoColumnsImgProjects.LeftColumn ); // other css properties: \".projectLeftColmnClass\" in css fil, \"relative\"e.\n\t\t\t\t\t\t/**----------===| push to array |===----------**/\n\t\t\t\t\t\taProjLeftColDivIds[ aProjLeftColDivIds.length ] = projContainrLeftColDivIds;\n\n\t\t\t\t\t\t/**----------===| CREATE PROJECT IMAGE CONTAINER: RIGHT COLUMN |===----------**/\n\t\t\t\t\t\t/** function parameters:(Id, Class, appendTo)\n\t\t\t\t\t\t **--------------------------------------------------------------------**/\n\t\t\t\t\t\tcreateDiv.fCreateBasicElement( proj.title + \"_ProjRight\", j2, \"projectRightColmnClass\", projContainerIds );\n\t\t\t\t\t\t/**----------===| Right Column: Ids |===----------**/\n\t\t\t\t\t\tlet projRightColDivIds = $( \"#\" + proj.title + \"_ProjRight\" + j2 );\n\t\t\t\t\t\t/**----------===| Right Column: Basic CSS |===----------------------------------**/\n\t\t\t\t\t\tfBasicDivStyle( projRightColDivIds, twoColumnsImgProjects.NewHeight + additionalHeight, twoColumnsImgProjects.RightColumn, \"relative\" );\n\t\t\t\t\t\taProjRightColDivIds[ aProjRightColDivIds.length ] = projRightColDivIds; //push\n\t\t\t\t\t\taProjectDisplay[ aProjectDisplay.length ] = proj.displayType; //push\n\t\t\t\t\t\taProjImagesLength[ aProjImagesLength.length ] = proj.images.length + 1; //push\n\n\t\t\t\t\t\t/**----------===| CREATE FLUID-CONTAINER INSIDE RIGHT COLUMN |===----------**/\n\t\t\t\t\t\tcreateDiv.fCreateBasicElement( proj.title + \"_FluidContainer_\", j2, \"fluidContainerClass\", projRightColDivIds );\n\t\t\t\t\t\t/**----------===| FLUID-CONTAINER: IDS |===----------**/\n\t\t\t\t\t\tconst fluidContainerIds = $( \"#\" + proj.title + \"_FluidContainer_\" + j2 );\n\t\t\t\t\t\t/**----------===| push to array |===----------**/\n\t\t\t\t\t\taFluidContainerIds[ aFluidContainerIds.length ] = fluidContainerIds;\n\t\t\t\t\t\t/**----------===| FLUID-CONTAINER WIDTH |===----------**/\n\t\t\t\t\t\tconst fluidContainerWidth = twoColumnsImgProjects.RightColumn * ( proj.images.length + 1 );\n\t\t\t\t\t\t/**----------===| FLUID-CONTAINER HEIGHT |===----------**/\n\t\t\t\t\t\tconst fluidContainerHeight = twoColumnsImgProjects.NewHeight + additionalHeight;\n\t\t\t\t\t\t/**----------===| push to array |===----------**/\n\t\t\t\t\t\taFluidContainerWidth[ aFluidContainerWidth.length ] = fluidContainerWidth;\n\t\t\t\t\t\taFluidContainerHeight[ aFluidContainerHeight.length ] = fluidContainerHeight;\n\t\t\t\t\t\t/**----------===| FLUID-CONTAINER: BASIC CSS |===----------**/\n\t\t\t\t\t\tfBasicDivStyle( fluidContainerIds, fluidContainerHeight, fluidContainerWidth, \"relative\" );\n\n\t\t\t\t\t\t/**----------===| CAROUSEL CONTROL: LEFT |===----------**/\n\t\t\t\t\t\ttagElement.fCreateTag( \"a\", \"carousel-control left\", \"leftCarousel\", j2, projRightColDivIds );\n\t\t\t\t\t\t//   let carouselControl = $(\".carousel-control\");\n\t\t\t\t\t\t//   carouselControl.css({\n\t\t\t\t\t\t//     \"height\": imageDivClass.height()\n\t\t\t\t\t\t//   })\n\n\t\t\t\t\t\tconst leftShaderIds = $( \"#leftCarouselId_\" + j2 ); //get ids\n\n\t\t\t\t\t\t/**----------===| push to array |===----------**/\n\t\t\t\t\t\taLeftShaderIds[ aLeftShaderIds.length ] = leftShaderIds; //push to array\n\t\t\t\t\t\t//   console.log(\"leftShaderIds: \", leftShaderIds, j2);\n\t\t\t\t\t\t//   console.log(\"aLeftShaderIds: \", aLeftShaderIds);\n\t\t\t\t\t\t/**----------===| CREATE GLYPHICON LEFT ARROW |===----------**/\n\t\t\t\t\t\ttagElement.fCreateTag( \"i\", \"glyphicon glyphicon-menu-left\", \"leftArrow\", j2, leftShaderIds ); //glyphicon glyphicon-menu-left glyphicon-chevron-left\n\n\t\t\t\t\t\t/**----------===| CAROUSEL CONTROL: RIGHT |===----------**/\n\t\t\t\t\t\ttagElement.fCreateTag( \"a\", \"carousel-control right\", \"rightCarousel\", j2, projRightColDivIds );\n\t\t\t\t\t\tconst rightShaderIds = $( \"#rightCarouselId_\" + j2 ); //GET IDS\n\t\t\t\t\t\taRightShaderIds[ aRightShaderIds.length ] = rightShaderIds; //PUSH\n\n\t\t\t\t\t\t/**----------===| KEEPING THE CAROUSELCONTROL HEIGHT SAME AS THE IMAGE HEIGHT |===----------**/\n\t\t\t\t\t\tfBasicDivStyle( leftShaderIds, twoColumnsImgProjects.NewHeight, \"null\", \"absolute\" );\n\t\t\t\t\t\tfBasicDivStyle( rightShaderIds, twoColumnsImgProjects.NewHeight, \"null\", \"absolute\" );\n\n\t\t\t\t\t\t/**----------===| CREATE NEW NEXT PREVIOUS CLASS INSTANCES |===----------**/\n\t\t\t\t\t\tconst nxtPrv = new nextPreviousNav.NextPrevNavClass();\n\t\t\t\t\t\t/**----------===| push to array |===----------**/\n\t\t\t\t\t\taNxtPrv[ aNxtPrv.length ] = nxtPrv;\n\t\t\t\t\t\t/**----------===| INVOKE NEXT PREVIOUS CLASS INSTANCE |===----------**/\n\t\t\t\t\t\tnxtPrv.fNextPrevNavigation( rightShaderIds, leftShaderIds, fluidContainerIds, twoColumnsImgProjects.RightColumn, fluidContainerWidth );\n\n\t\t\t\t\t\t/**----------===| CREATE GLYPHICON RIGHT ARROW |===----------**/\n\t\t\t\t\t\ttagElement.fCreateTag( \"i\", \"glyphicon glyphicon-menu-right\", \"rightArrow\", j2, rightShaderIds ); ////glyphicon glyphicon-menu-right  glyphicon-chevron-right  glyphicons-fit-image-to-frame\n\n\t\t\t\t\t\t/**----------===| On first enter the site all left image arrows are hidden |===----------**/\n\t\t\t\t\t\tleftShaderIds.hide();\n\n\t\t\t\t\t\tglyphicon = $( \".glyphicon\" ); //GET CLASSNAME\n\n\t\t\t\t\t\t/**----------===| J2: VIDEO ONLY  |===----------**/\n\t\t\t\t\t\tif ( proj.displayType === \"video\" ) {\n\t\t\t\t\t\t\trightShaderIds.hide();\n\t\t\t\t\t\t\t/**----------===| Right Column: CSS Height & Width |===----------------------------------**/\n\t\t\t\t\t\t\tfBasicDivStyle( projRightColDivIds, twoColumnsImgProjects.NewHeight, twoColumnsImgProjects.RightColumn, \"relative\" );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/**----------==========| PROJECT PARAGRAPHS |==========----------**/\n\t\t\t\t\t\t/**----------===| PARAGRAPH COLUMNS PERCENTAGE |===----------**/\n\t\t\t\t\t\ttwoColumnsParagProjects.fTwoColumnsQueries( gdContainerWidth, proj.paragraphRightColumnPercent, 0, 0 );\n\t\t\t\t\t\t/**----------===| push to aray |===----------**/\n\t\t\t\t\t\taParagraphRightColumnPercent[ aParagraphRightColumnPercent.length ] = proj.paragraphRightColumnPercent;\n\t\t\t\t\t\taParagraphLeftColumnWidth[ aParagraphLeftColumnWidth.length ] = twoColumnsParagProjects.LeftColumn;\n\n\t\t\t\t\t\t/**----------===| CREATE PARAGRAPH CONTAINER |===----------**/\n\t\t\t\t\t\tcreateDiv.fCreateBasicElement( proj.title + \"_Paragraph\", j2, \"paragraphContainerClass\", gdContainer );\n\t\t\t\t\t\t/**----------===| Project Paragraph Container: Ids |===----------**/\n\t\t\t\t\t\tlet projParagDivIds = $( \"#\" + proj.title + \"_Paragraph\" + j2 );\n\t\t\t\t\t\t/**----------===| Project Paragraph Container: Basic CSS |===----------**/\n\t\t\t\t\t\tfBasicDivStyle( projParagDivIds, \"auto\", gdContainerWidth, \"relative\" );\n\t\t\t\t\t\t/**----------===| Push to array |===----------**/\n\t\t\t\t\t\taParagraphContainer[ aParagraphContainer.length ] = projParagDivIds;\n\n\t\t\t\t\t\t/**----------===| CREATE PARAGRAPH LEFT COLUMNS |===----------**/\n\t\t\t\t\t\tcreateDiv.fCreateBasicElement( proj.title + \"_ParagLeftColmn\", j2, \"paragraphLeftColumnClass\", projParagDivIds );\n\t\t\t\t\t\t/**----------===| Project Paragraph Left Column: Ids |===----------**/\n\t\t\t\t\t\tlet paragLeftColDivIds = $( \"#\" + proj.title + \"_ParagLeftColmn\" + j2 );\n\n\t\t\t\t\t\t/**----------===| Project Paragraph Left Column: Basic CSS |===----------**/\n\t\t\t\t\t\tfBasicDivStyle( paragLeftColDivIds, arbitraryNum, twoColumnsParagProjects.LeftColumn, \"relative\" );\n\t\t\t\t\t\t/**----------===| Project Paragraph Left Column:: Push to array |===----------**/\n\t\t\t\t\t\taProjParagLeftDivIds[ aProjParagLeftDivIds.length ] = paragLeftColDivIds;\n\n\t\t\t\t\t\t/**----------===| CREATE PARAGRAPH RIGHT COLUMNS |===----------**/\n\t\t\t\t\t\tcreateDiv.fCreateBasicElement( proj.title + \"_ParagRightColmn\", j2, \"paragraphRightColumnClass\", projParagDivIds );\n\t\t\t\t\t\t/**----------===| Project Paragraph Right Column: Ids |===----------**/\n\t\t\t\t\t\tlet paragRightColDivIds = $( \"#\" + proj.title + \"_ParagRightColmn\" + j2 );\n\t\t\t\t\t\taProjParagRightDivIds[ aProjParagRightDivIds.length ] = paragRightColDivIds;\n\t\t\t\t\t\t/**----------===| Project Paragraph Right Column: Basic CSS |===----------**/\n\t\t\t\t\t\tfBasicDivStyle( paragRightColDivIds, \"auto\", twoColumnsParagProjects.RightColumn, \"relative\" );\n\n\t\t\t\t\t\t/**----------===| Project Paragraph Right Column:: Push to array |===----------**/\n\t\t\t\t\t\taParagraphRightColumnWidth[ aParagraphRightColumnWidth.length ] = twoColumnsParagProjects.RightColumn;\n\t\t\t\t\t\t//console.log(\"aParagraphRightColumnWidth: \", aParagraphRightColumnWidth);\n\n\t\t\t\t\t\t/**----------===| CREATE PROJECT TITLES |===----------**/\n\t\t\t\t\t\ttextDiv.fCreateTextDiv( proj.title + \"_ProjTitle\", j2, \"projTitleClass\", paragRightColDivIds, proj.title );\n\t\t\t\t\t\t// Get Id\n\t\t\t\t\t\tlet paraghProjTitleIds = $( \"#\" + proj.title + \"_ProjTitle\" + j2 );\n\t\t\t\t\t\t// Pust to array\n\t\t\t\t\t\taParaghProjTitleIds[ aParaghProjTitleIds.length ] = paraghProjTitleIds;\n\t\t\t\t\t\t// Apply text screen queries\n\t\t\t\t\t\theaderText.fTextQueries( gdContainerWidth, paraghProjTitleIds, projTitleSmlFontSize, projTitleMidFontSize, projTitleLrgFontSize );\n\n\t\t\t\t\t\t/**----------===| CREATE PROJECT SUB-TITLES |===----------**/\n\t\t\t\t\t\ttextDiv.fCreateTextDiv( proj.title + \"_ProjSubTitle\", j2, \"projSubTitleClass\", paragRightColDivIds, proj.subTitle );\n\t\t\t\t\t\t// Get Id\n\t\t\t\t\t\tlet paraghProjSubTitleIds = $( \"#\" + proj.title + \"_ProjSubTitle\" + j2 );\n\t\t\t\t\t\t// Pust to array\n\t\t\t\t\t\taParaghProjSubTitleIds[ aParaghProjSubTitleIds.length ] = paraghProjSubTitleIds;\n\t\t\t\t\t\t// Apply text screen queries\n\t\t\t\t\t\theaderText.fTextQueries( gdContainerWidth, paraghProjSubTitleIds, projSubTitleSmlFontSize, projSubTitleMidFontSize, projSubTitleLrgFontSize );\n\n\n\t\t\t\t\t\t/**----------===| CREATE PROJECT DESCRIPTIONS |===----------**/\n\t\t\t\t\t\ttextDiv.fCreateTextDiv( proj.title + \"_ProjDescription\", j2, \"projDescriptionClass\", paragRightColDivIds, proj.projDescription );\n\t\t\t\t\t\t// Get Id\n\t\t\t\t\t\tlet paraghProjlinkURLs = $( \"#\" + proj.title + \"_ProjDescription\" + j2 );\n\t\t\t\t\t\t// Pust to array\n\t\t\t\t\t\taParagraphProjDescription[ aParagraphProjDescription.length ] = paraghProjlinkURLs;\n\t\t\t\t\t\t// Apply text screen queries\n\t\t\t\t\t\theaderText.fTextQueries( gdContainerWidth, paraghProjlinkURLs, projDescSmlFontSize, projDescMidFontSize, projDescLrgFontSize );\n\n\n\t\t\t\t\t\t//console.log(\"gdContainerWidth:3 \", gdContainerWidth);\n\t\t\t\t\t\tlet projTitleClass = $( \".projTitleClass\" );\n\t\t\t\t\t\t//console.log(\"projTitleClass: \", projTitleClass);\n\t\t\t\t\t\t//fScreenQueries();\n\n\t\t\t\t\t\t// console.log(`\n\t\t\t\t\t\t// /**|===============================|**/\n\t\t\t\t\t\t// /**|       IMAGES JSON LOOP        |**/\n\t\t\t\t\t\t// /**|===============================|**/\n\t\t\t\t\t\t// `);\n\n\t\t\t\t\t\tfor ( let imgs of proj.images ) {\n\t\t\t\t\t\t\tj3++;\n\t\t\t\t\t\t\t// console.log(`\n\t\t\t\t\t\t\t//   <•----------------------------------•>\n\t\t\t\t\t\t\t//   aImagesCount.length:j3 :  ${aImagesCount.length}\n\t\t\t\t\t\t\t//   ${imgs.imgTitle}\n\t\t\t\t\t\t\t//   <•----------------------------------•>\n\t\t\t\t\t\t\t//   `);\n\t\t\t\t\t\t\tif ( proj.displayType === \"image\" ) {\n\t\t\t\t\t\t\t\tglyphiconXpand = $( \".glyphicon-expand\" );\n\t\t\t\t\t\t\t\t/**----------===| push to array use for animation |===----------**/\n\t\t\t\t\t\t\t\taImagesCount[ aImagesCount.length ] = imgs;\n\t\t\t\t\t\t\t\t/**----------===| RIGHT COLUMN PERCENTAGE |===----------**/\n\t\t\t\t\t\t\t\ttwoColumnsImages.fTwoColumnsQueries( gdContainerWidth, proj.imgRightColumnPercent, proj.imagesWidth, proj.imagesHeight );\n\t\t\t\t\t\t\t\t/**----------===| push to array |===----------**/\n\t\t\t\t\t\t\t\taImagesRightColumnPercent[ aImagesRightColumnPercent.length ] = proj.imgRightColumnPercent;\n\t\t\t\t\t\t\t\taImagesWidth[ aImagesWidth.length ] = twoColumnsImages.RightColumn;\n\t\t\t\t\t\t\t\taImagesHeight[ aImagesHeight.length ] = twoColumnsImages.NewHeight;\n\n\t\t\t\t\t\t\t\t/**----------===| CREATE IMAGE DIV INSIDE FLUID-CONTAINER |===----------**/\n\t\t\t\t\t\t\t\timageBasicDiv.fCreateBasicElement( proj.title + \"_Image\", j3, \"imageDivClass\", fluidContainerIds );\n\t\t\t\t\t\t\t\tlet imageIds = $( \"#\" + proj.title + \"_Image\" + j3 ); //GET IDS\n\t\t\t\t\t\t\t\taImageIds[ aImageIds.length ] = imageIds; //PUSH\n\n\t\t\t\t\t\t\t\t/**----------===| IMAGE CREATION |===----------**/\n\t\t\t\t\t\t\t\tlet myImage = new Image();\n\t\t\t\t\t\t\t\tlet imagesPath = \"./images/\" + proj.title + \"/\"; //FILEPATH\n\t\t\t\t\t\t\t\tmyImage.src = imagesPath + imgs.imgName; //CONCAT\n\t\t\t\t\t\t\t\taImages[ aImages.length ] = myImage.src; //PUSH\n\t\t\t\t\t\t\t\t/**----------===| IMAGE DIV: CSS |===----------**/\n\t\t\t\t\t\t\t\t/*        Populating the div with image        *\n\t\t\t\t\t\t\t\t **--------------------------------------------**/\n\t\t\t\t\t\t\t\tlet columnHeight = twoColumnsImages.NewHeight;\n\t\t\t\t\t\t\t\tlet columnWidth = twoColumnsImages.RightColumn;\n\t\t\t\t\t\t\t\tfBasicImageStyle( imageIds, columnHeight, columnWidth, myImage.src ); //\n\n\t\t\t\t\t\t\t\t/**----------===| IMAGE DESCRIPTIONS |===----------**/\n\t\t\t\t\t\t\t\ttextDiv.fCreateTextDiv( \"imgDescription_\", j3, \"imgDescription_Class\", imageIds, imgs.imgDescription, imgs.hoverTitle );\n\n\t\t\t\t\t\t\t\t/*** TEST: Put this outside ajax and into a class **/\n\t\t\t\t\t\t\t\tlet imageDescriptIds = $( \"#imgDescription_\" + j3 ); //id = imgDescription_j3\n\t\t\t\t\t\t\t\taImageDescriptIds[ aImageDescriptIds.length ] = imageDescriptIds;\n\t\t\t\t\t\t\t\t//let imageDescriptClass = $(\".imgDescription_Class\"); // + proj.title + \"_Class\");\n\t\t\t\t\t\t\t\t//fImgDescriptIdStyle(imageDescriptIds, twoColumnsImgProjects.NewHeight);\n\t\t\t\t\t\t\t\t//.imgDescription_Class\n\t\t\t\t\t\t\t\timageDescriptIds.css( {\n\t\t\t\t\t\t\t\t\t\"margin-top\": twoColumnsImgProjects.NewHeight + \"px\"\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\theaderText.fTextQueries( gdContainerWidth, imageDescriptIds, imgDescSmlFontSize, imgDescMidFontSize, imgDescLrgFontSize );\n\n\t\t\t\t\t\t\t\t/**----------===| OPEN DESCRIPTION LINK |===----------**/\n\t\t\t\t\t\t\t\tlet fullScreen = imgs.fullScreen;\n\t\t\t\t\t\t\t\tlet linkToOpen = imgs.linkURL;\n\t\t\t\t\t\t\t\t//console.log(typeof imgs.scrnHeight)\n\t\t\t\t\t\t\t\t//console.log(typeof screen.height);\n\t\t\t\t\t\t\t\t//   let screenHeight = parseInt(imgs.scrnHeight);\n\t\t\t\t\t\t\t\t//   let screenWidth = parseInt(imgs.scrnWidth);\n\t\t\t\t\t\t\t\t//console.log(imgs.scrnWidth);\n\t\t\t\t\t\t\t\t//console.log(screenWidth);\n\t\t\t\t\t\t\t\tlet screenHeight = imgs.scrnHeight;\n\t\t\t\t\t\t\t\tlet screenWidth = imgs.scrnWidth;\n\n\n\n\t\t\t\t\t\t\t\tfWindowOpen2( imageDescriptIds, linkToOpen, fullScreen, screenHeight, screenWidth );\n\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t/**----------===| J3: VIDEO ONLY  |===----------**/\n\t\t\t\t\t\t\t\t/**----------===| push to array |===----------**/\n\t\t\t\t\t\t\t\taVideoColumnPercent[ aVideoColumnPercent.length ] = proj.imgRightColumnPercent;\n\t\t\t\t\t\t\t\t/**----------===| FLUID-CONTAINER: CSS: VIDEO |===----------**/\n\t\t\t\t\t\t\t\tfBasicDivStyle( fluidContainerIds, twoColumnsImgProjects.NewHeight, twoColumnsImgProjects.RightColumn, \"relative\" );\n\t\t\t\t\t\t\t\t/**----------===| CREATE YOUTUBE VIDEO PLACEHOLDER  |===----------**/\n\t\t\t\t\t\t\t\t//instanceName.fCreateVideoDiv(videoId, appendedTo, divHeight, divWidth)\n\t\t\t\t\t\t\t\tyouTubeVideo.fCreateVideoDiv( \"video-placeholder\", fluidContainerIds, twoColumnsImgProjects.NewHeight, twoColumnsImgProjects.RightColumn );\n\t\t\t\t\t\t\t\tlet videoPlaceholder = $( \"#video-placeholder\" );\n\t\t\t\t\t\t\t\t/**----------===| videoPlaceholder: Height & Width CSS |===----------**/\n\t\t\t\t\t\t\t\tfBasicDivStyle( videoPlaceholder, twoColumnsImgProjects.NewHeight, twoColumnsImgProjects.RightColumn, \"relative\" );\n\t\t\t\t\t\t\t} //END VIDEO\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconsole.log( \"--------------------| AJAX • END •  JSON |--------------------\" );\n\n\t\t\t} ) // End Promise\n\n\t\t/** promise failure **/\n\t\t// function(data) {\n\t\t//   console.log(\"Request Failed!\")\n\t\t// }\n\n\t}\n\n\t/**----------===| INVOKE fRunAjax  |===----------**/\n\tfRunAjax();\n\n\t// console.log(`\n\t// /**|======================================================|**/\n\t// /**|                      ANIMATION:                      |**/\n\t// /**|                 ARRAY STATIC EVENTS                  |**/\n\t// /**|======================================================|**/\n\t// `);\n\n\t/***----------=====| INTRO ANIMATION |=====----------***/\n\tlet fEventIntro = () => {\n\t\t/**----------===| FULL LANDING PAGE IMAGE DIV |===----------**/\n\t\tlet inWindowHeight = window.innerHeight; // / 2;\n\t\tlet inWindowWidth = window.innerWidth;\n\t\tfIntroImageStyle( introImageIds, inWindowHeight, inWindowWidth, myIntroImage.src );\n\n\t\t/**----------===| CALCULATE LEFT & RIGHT COLUMN WIDTHS |===----------**/\n\t\t/** Description:\n\t\t    Invoke fTwoColumnsQueries to  calculates Left and Right columns widths based on the percentage passed to the class\n\t\t    Usage: twoColumnsIntroSection.LeftColumn, twoColumnsIntroSection.RightColumn... **/\n\t\ttwoColumnsIntroSection.fTwoColumnsQueries( gdContainerWidth, logoTitleColumnPercent, arbitraryNum, arbitraryNum );\n\n\t\t/**----------===| LOGO CONTAINER |===----------**/\n\t\t//fBasicDivStyle(logoLeftColDivId, arbitraryNum, twoColumnsIntroSection.LeftColumn, \"relative\");\n\t\tanim.fAnimateHeightWidth( logoLeftColDivId, arbitraryNum, twoColumnsIntroSection.LeftColumn, animTymSlow );\n\t\t//fBasicDivStyle(logoRightColDivId, \"auto\", twoColumnsIntroSection.RightColumn - 20, \"relative\");\n\t\tfBasicDivStyle( logoRightColDivId, \"auto\", \"auto\", \"relative\" );\n\t\t//anim.fAnimateHeightWidth(logoRightColDivId, \"auto\", \"auto\", animTymSlow);\n\n\t\t// rightColumnHeight = logoRightColDivId.height() + 30;\n\t\t// let rightColumnWidth = logoRightColDivId.width();\n\n\t\t//introRightColumnClass\n\t\t//let rightColumnHeightFrTwoColumns = twoColumnsIntroSection.NewHeight;\n\t\t// console.log(\"rightColumnHeight: \", rightColumnHeight);\n\t\t// console.log(\"rightColumnWidth: \", rightColumnWidth);\n\t\t//console.log(\"rightColumnHeightFrTwoColumns: \", rightColumnHeightFrTwoColumns);\n\n\n\t\t//fBasicIntroStyle(logoContainerDivId, 400, gdContainerWidth);\n\t\t//let marginTop = inWindowHeight - rightColumnHeight\n\t\t//anim.fAnimateHeightWidth(logoContainerDivId, rightColumnHeight, gdContainerWidth, animTymSlow);\n\t\tanim.fAnimateHeightWidth( logoContainerDivId, \"auto\", gdContainerWidth, animTymSlow );\n\t\t//fBasicIntroStyle(logoContainerDivId, rightColumnHeight + 20, gdContainerWidth);\n\t\tlogoContainerDivId.css( {\n\t\t\t\t\"margin-top\": inWindowHeight - ( rightColumnHeight + 40 ) // - 800 //(400 + (inWindowHeight / 5)) //\"100px\" //-(inWindowHeight / 4)\n\t\t\t} )\n\t\t\t//anim.fAnimateHeightWidth(logoContainerDivId, rightColumnHeightFrTwoColumns, gdContainerWidth, animTymSlow);\n\n\t\tconsole.log( \"logoTitleId.height(): \", logoTitleId.height() );\n\t\tconsole.log( \"logoSubTitleId.height(): \", logoSubTitleId.height() );\n\t\tconsole.log( \"introCalloutId.height(): \", introCalloutId.height() );\n\t\tconsole.log( \"toggleBtn.height(): \", toggleBtn.height() );\n\n\t\t/**----------===| SCREEN QUERIES |===----------**/\n\t\t/** logoTitleColumnPercent = introData.logoTitleColumnPercent;\n\t\t *  Calculates the percentage width for the Left & Right Columns based on gdContainerWidth\n\t\t    If gdContainerWidth is < 600 the Right Column should be 95% wide and 80% wide if >. **/\n\t\t//logoColumn.fScreenQueries(gdContainerWidth);\n\t\t//console.log(\"logoColumn.ColumnPercentage: \", logoColumn.ColumnPercentage);\n\t\t//console.log(\"twoColumnsIntroSection.LeftColumn: \", twoColumnsIntroSection.LeftColumn);\n\t\t//console.log(\"twoColumnsIntroSection.RightColumn: \", twoColumnsIntroSection.RightColumn);\n\t\t//console.log(\"logoTitleColumnPercent: \", logoTitleColumnPercent);\n\t\t//logoText.fTextQueries(gdContainerWidth, logoTitleClass, logoSubTitleClass);\n\t\tlogoText.fTextQueries( gdContainerWidth, logoTitleId, logoTitleSmlFontSize, logoTitleMidFontSize, logoTitleLrgFontSize );\n\t\tlogoText.fTextQueries( gdContainerWidth, logoSubTitleId, logoSubTitleSmlFontSize, logoSubTitleMidFontSize, logoSubTitleLrgFontSize );\n\t\tlogoText.fTextQueries( gdContainerWidth, introCalloutId, introCalloutFontSize, introCalloutFontSize, introCalloutFontSize );\n\t\tlogoText.fTextQueries( gdContainerWidth, toggleBtn, codingBtnFontSize, codingBtnFontSize, codingBtnFontSize );\n\n\t\t//logoColumn.fScreenQueries(gdContainerWidth, logoColumn.ColumnPercentage, logoTitleClass, logoSubTitleClass)\n\n\t\t// // anim.fAnimateHeightWidth(logoContainerDivId, 400, gdContainerWidth, animTymSlow);\n\n\t\t//anim.fAnimateHeightWidth(logoRightColDivId, \"auto\", twoColumnsIntroSection.RightColumn - 50, animTymSlow);\n\t\t//anim.fAnimateHeightWidth(logoRightColDivId, \"auto\", \"auto\", animTymSlow);\n\n\t\t// // console.log(\"logoRightColDivId.height(): \", logoRightColDivId.height());\n\t\t// // let rightColumnHeight = logoRightColDivId.height();\n\t\t// anim.fAnimateHeightWidth(logoLeftColDivId, arbitraryNum, twoColumnsIntroSection.LeftColumn, animTymSlow);\n\n\t\t// //TEMP\n\t\t// logoLeftColDivId.css({\n\t\t//   \"border-top\": \"2px solid red\"\n\t\t// })\n\t\t// logoRightColDivId.css({\n\t\t//   \"border-top\": \"2px solid yellowGreen\"\n\t\t// })\n\t\t/**----------===| CODING CONTAINER |===----------**/\n\t\tfBasicDivStyle( codingThisSiteId, \"auto\", gdContainerWidth, \"relative\" );\n\t}\n\n\t/***----------=====| SECTION HEADER ANIMATION |=====----------***/\n\tlet fEventHeaders = () => {\n\t\t/**----------===| IMAGE DIV: IDS |===----------**/\n\t\t//introImageIds = $(\"#\" + introData.title + \"_IntroImg\" + 1);\n\t\t/**----------===| IMAGE DIV: CSS |===----------**/\n\t\t/*        Populating the div with image        *\n\t\t **--------------------------------------------**/\n\t\t// let inWindowHeight = window.innerHeight / 2;\n\t\t// let inWindowWidth = window.innerWidth;\n\t\t// fBasicImageStyle(introImageIds, inWindowHeight, inWindowWidth, myIntroImage.src);\n\n\t\t// let projTitleClass = $(\".projTitleClass\");\n\t\t// console.log(\"projTitleClass: \", projTitleClass);\n\n\t\tfor ( let e1 = 0; e1 < aSectionsCount.length; e1++ ) {\n\t\t\t/**----------===| INVOKE SECTION COLUMNS |===----------**/\n\t\t\ttwoColumnsHeaderSection.fTwoColumnsQueries( gdContainerWidth, aSectionsRightColumnPercent[ e1 ], arbitraryNum, arbitraryNum );\n\t\t\t/**----------===| Basic CSS: (id, height, width) |===----------**/\n\t\t\t//fBasicDivStyle(aSectionHeaders[e1], \"auto\", gdContainerWidth, \"relative\");\n\n\t\t\t//logoColumn.fScreenQueries(gdContainerWidth);\n\n\t\t\t/**----------===| Left Column: Basic CSS |===----------**/\n\t\t\t//fBasicDivStyle(aSectionHeadrLeftColmn[e1], arbitraryNum, twoColumnsHeaderSection.LeftColumn, \"relative\");\n\t\t\tanim.fAnimateHeightWidth( aSectionHeadrLeftColmn[ e1 ], arbitraryNum, twoColumnsHeaderSection.LeftColumn, animTymSlow );\n\t\t\t/**----------===| Sections Header Right Column: Basic Style |===----------**/\n\t\t\t//fBasicDivStyle(aSectionHeadrRightColmn[e1], \"auto\", twoColumnsHeaderSection.RightColumn, \"relative\");\n\t\t\t/**----------===| Sections Header Title Text: Basic Style |===----------**/\n\t\t\t//fBasicDivStyle(aSectionHeadrTitles[e1], \"auto\", twoColumnsHeaderSection.RightColumn, \"relative\");\n\t\t\t//gdContainerWidth = (gdContainer.width());\n\t\t\tanim.fAnimateHeightWidth( aSectionHeaders[ e1 ], \"auto\", gdContainerWidth, animTymSlow );\n\n\t\t\t//anim.fAnimateHeightWidth(aSectionHeadrLeftColmn[e1], arbitraryNum, twoColumnsHeaderSection.LeftColumn, animTymFast);\n\t\t\tanim.fAnimateHeightWidth( aSectionHeadrRightColmn[ e1 ], \"auto\", \"auto\", animTymSlow ); //twoColumnsHeaderSection.RightColumn\n\t\t\tanim.fAnimateHeightWidth( aSectionHeadrTitles[ e1 ], \"auto\", \"auto\", animTymSlow );\n\t\t\theaderText.fTextQueries( gdContainerWidth, aSectionHeadrTitles[ e1 ], headerSmlFontSize, headerMidFontSize, headerLrgFontSize );\n\n\n\t\t\t//TEMP\n\t\t\t//   aSectionHeadrLeftColmn[e1].css({\n\t\t\t//     //\"background-color\": \"cyan\",\n\t\t\t//     \"border-top\": \"4px solid red\"\n\t\t\t//   })\n\t\t\t//   aSectionHeadrRightColmn[e1].css({\n\t\t\t//     //\"background-color\": \"cyan\",\n\t\t\t//     \"border-top\": \"4px solid yellowGreen\"\n\t\t\t//   })\n\n\t\t\t// TEMP\n\t\t\t// aSectionHeadrTitles[e1].css({\n\t\t\t//   \"border-bottom\": \"1px solid white\"\n\t\t\t// })\n\n\t\t} // end of aSectionsCount.length\n\t}\n\n\t/***----------=====| PROJECTS ANIMATION |=====----------***/\n\tlet fEventProjects = () => {\n\t\tfor ( let e2 = 0; e2 < aProjectsCount.length; e2++ ) {\n\t\t\t/**----------===| PROJECT COLUMNS PERCENTAGE |===----------**/\n\t\t\ttwoColumnsImgProjects.fTwoColumnsQueries( gdContainerWidth, aProjectRightColumnPercent[ e2 ], aImagesOrigWidth[ e2 ], aImagesOrigHeight[ e2 ] );\n\t\t\tfBasicDivStyle( aProjContainerIds[ e2 ], \"auto\", gdContainerWidth, \"relative\" );\n\t\t\tfBasicDivStyle( aProjLeftColDivIds[ e2 ], arbitraryNum, twoColumnsImgProjects.LeftColumn, \"relative\" );\n\t\t\tfBasicDivStyle( aProjRightColDivIds[ e2 ], twoColumnsImgProjects.NewHeight + additionalHeight, twoColumnsImgProjects.RightColumn, \"relative\" );\n\t\t\tfBasicDivStyle( aFluidContainerIds[ e2 ], twoColumnsImgProjects.NewHeight + additionalHeight, twoColumnsImgProjects.RightColumn * aProjImagesLength[ e2 ], \"relative\" );\n\n\t\t\t/**----------===| E2: VIDEO |===----------**/\n\t\t\tif ( aProjectDisplay[ e2 ] === \"video\" ) {\n\t\t\t\tfBasicDivStyle( aProjRightColDivIds[ e2 ], twoColumnsImgProjects.NewHeight, twoColumnsImgProjects.RightColumn, \"relative\" );\n\t\t\t\tfBasicDivStyle( aFluidContainerIds[ e2 ], twoColumnsImgProjects.NewHeight, twoColumnsImgProjects.RightColumn, \"relative\" );\n\t\t\t\tlet videoPlaceholder = $( \"#video-placeholder\" );\n\t\t\t\tfBasicDivStyle( videoPlaceholder, twoColumnsImgProjects.NewHeight, twoColumnsImgProjects.RightColumn, \"relative\" );\n\t\t\t}\n\t\t\taNxtPrv[ e2 ].ImgContainer = aFluidContainerIds[ e2 ];\n\t\t\taNxtPrv[ e2 ].ImgContainerWidth = twoColumnsImgProjects.RightColumn;\n\t\t\taNxtPrv[ e2 ].fluidContainerWidth = twoColumnsImgProjects.RightColumn * aProjImagesLength[ e2 ];\n\t\t\tfBasicDivStyle( aLeftShaderIds[ e2 ], twoColumnsImgProjects.NewHeight, \"null\", \"absolute\" );\n\t\t\tfBasicDivStyle( aRightShaderIds[ e2 ], twoColumnsImgProjects.NewHeight, \"null\", \"absolute\" );\n\t\t\tanim.fXSlider( aFluidContainerIds[ e2 ], -( aNxtPrv[ e2 ].ImgContainerWidth * aNxtPrv[ e2 ].Num ) );\n\t\t\t/**----------===| Project Paragraph Columns |===----------**/\n\t\t\ttwoColumnsParagProjects.fTwoColumnsQueries( gdContainerWidth, aParagraphRightColumnPercent[ e2 ], 0, 0 );\n\t\t\tfBasicDivStyle( aParagraphContainer[ e2 ], \"auto\", gdContainerWidth, \"relative\" );\n\t\t\tfBasicDivStyle( aProjParagLeftDivIds[ e2 ], arbitraryNum, twoColumnsParagProjects.LeftColumn, \"relative\" );\n\t\t\tfBasicDivStyle( aProjParagRightDivIds[ e2 ], \"auto\", twoColumnsParagProjects.RightColumn, \"relative\" );\n\n\t\t\theaderText.fTextQueries( gdContainerWidth, aParaghProjTitleIds[ e2 ], projTitleSmlFontSize, projTitleMidFontSize, projTitleLrgFontSize );\n\t\t\theaderText.fTextQueries( gdContainerWidth, aParaghProjSubTitleIds[ e2 ], projSubTitleSmlFontSize, projSubTitleMidFontSize, projSubTitleLrgFontSize );\n\t\t\theaderText.fTextQueries( gdContainerWidth, aParagraphProjDescription[ e2 ], projDescSmlFontSize, projDescMidFontSize, projDescLrgFontSize );\n\n\t\t}\n\t}\n\n\t/***----------=====| IMAGES ANIMATION |=====----------***/\n\tlet fEventVisualContent = () => {\n\t\t\tfor ( let i3 = 0; i3 < aImagesCount.length; i3++ ) {\n\t\t\t\t/**----------===| INVOKE PROJECTS IMAGES COLUMNS |===----------**/\n\t\t\t\ttwoColumnsImagesAnim.fTwoColumnsQueries( gdContainerWidth, aImagesRightColumnPercent[ i3 ], aImagesWidth[ i3 ], aImagesHeight[ i3 ] );\n\t\t\t\t//console.log(\"aImagesRightColumnPercent[i3]: \", aImagesRightColumnPercent[i3]);\n\t\t\t\t/***----------=====| Images divs height and width |=====-------------------***/\n\t\t\t\tanim.fAnimateHeightWidth( aImageIds[ i3 ], twoColumnsImagesAnim.NewHeight, twoColumnsImagesAnim.RightColumn, animTymSlow );\n\t\t\t\t//console.log(\"twoColumnsImagesAnim.RightColumn:i3 \", twoColumnsImagesAnim.RightColumn);\n\t\t\t\taImageDescriptIds[ i3 ].css( {\n\t\t\t\t\t\"margin-top\": twoColumnsImagesAnim.NewHeight + \"px\"\n\t\t\t\t} );\n\t\t\t\theaderText.fTextQueries( gdContainerWidth, aImageDescriptIds[ i3 ], imgDescSmlFontSize, imgDescMidFontSize, imgDescLrgFontSize );\n\n\t\t\t\ttwoColumnsVideo.fTwoColumnsQueries( gdContainerWidth, aVideoColumnPercent[ i3 ], aVideoWidth[ i3 ], aVideoHeight[ i3 ] );\n\t\t\t\t/**----------===| VIDEO ONLY  |===----------**/\n\t\t\t\tif ( aProjectDisplay[ i3 ] === \"video\" ) {\n\t\t\t\t\t//rightShaderIds.hide();\n\t\t\t\t\t//console.log(\"video----------------------------------------\", i3);\n\t\t\t\t\t//console.dir(\"twoColumnsVideo: \", twoColumnsVideo);\n\t\t\t\t\t//twoColumnsVideo.fTwoColumnsQueries(100, 1280, 720); //aImagesWidth[i3], aImagesHeight[i3]);\n\t\t\t\t\t//twoColumnsVideo.fTwoColumnsQueries(aVideoColumnPercent[i3], aVideoWidth[i3], aVideoHeight[i3]);\n\t\t\t\t\t//let videoPlaceholder = $(\"#video-placeholder\");\n\t\t\t\t\t/**----------===| videoPlaceholder: Height & Width CSS |===----------**/\n\t\t\t\t\t//fBasicDivStyle(videoPlaceholder, twoColumnsImgProjects.NewHeight, twoColumnsImgProjects.RightColumn, \"relative\");\n\t\t\t\t\t//fBasicDivStyle(videoPlaceholder, twoColumnsVideo.NewHeight, twoColumnsVideo.RightColumn, \"relative\");\n\n\t\t\t\t\t// videoPlaceholder.css({\n\t\t\t\t\t//   \"height\": twoColumnsImgProjects.NewHeight + \"px\",\n\t\t\t\t\t//   \"width\": twoColumnsVideo.RightColumn + \"px\"\n\t\t\t\t\t// });\n\t\t\t\t\t// console.log(\"aVideoColumnPercent[1]: \", aVideoColumnPercent[1]);\n\t\t\t\t\t// console.log(\"aVideoWidth[i3]: \", aVideoWidth[i3]);\n\t\t\t\t\t// console.log(\"twoColumnsVideo: \", twoColumnsVideo);\n\t\t\t\t\t// console.log(\"videoPlaceholder: \", videoPlaceholder);\n\t\t\t\t\t//console.log(\"----------------------------------------video\");\n\t\t\t\t}\n\n\t\t\t} /**----===| END IMAGES ANIMATION: |-------------------------------•**/\n\t\t}\n\t\t// console.log(`\n\t\t// /**|======================================================|**/\n\t\t// /**|                      ANIMATION:                      |**/\n\t\t// /**|                WINDOW RESIZE FUNCTION                |**/\n\t\t// /**|======================================================|**/\n\t\t// `);\n\tlet fOnWindowResize = function() {\n\t\tgdContainerWidth = ( gdContainer.width() );\n\t\t//console.log(`gdContainerWidth: ${gdContainerWidth}`);\n\t\t//console.log(`window.innerWidth: ${window.innerWidth}`);\n\t\tfEventIntro();\n\t\tfEventHeaders();\n\t\tfEventProjects();\n\t\tfEventVisualContent();\n\n\t}; // End fOnWindowResize\n\n\t/**-----------=====| fInitMediaQueries Function |=====-----------**/\n\t/** Function to initialize fMediaQueries function on load\n\t *  TweenMax.ticker is used to add and remove the event listener\n\t *  ix: counter\n\t ****************************************************************/\n\t/************ ANIMATION ENGINE ************/\n\t//var tMx = TweenMax;\n\t//  var easeSine = Sine.easeOut;\n\t//  var easePower = Power3.easeOut;\n\t//  var animTymSlow = .5;\n\t//  var zeroTym = 0;\n\t// var ix = 0;\n\t// var fInitMediaQueries = function() {\n\t//   tMx.ticker.addEventListener(\"tick\", fTimer);\n\t//   function fTimer() {\n\t//     /**-----===( Load Media Queries )===-----**/\n\t//     //fOnWindowResize();\n\t//     $(window).on('resize', fOnWindowResize);\n\t//     ix++;\n\t//     console.log(\"ix: \", ix);\n\t//     if (ix >= 1) {\n\t//       fRemoveEvntListnr(fTimer);\n\t//     }\n\t//   }\n\t// };\n\t// var fRemoveEvntListnr = function(myFunct) {\n\t//   tMx.ticker.removeEventListener(\"tick\", myFunct);\n\t// };\n\n\t//fInitMediaQueries();\n\t/**-----------=====| End fInitMediaQueries |=====-----------**/\n\n\t$( window ).on( 'resize', fOnWindowResize );\n\t//$(window).on('resize', fInitMediaQueries);\n\t/**----------=====| End Window Resize Function |=====----------**/\n\n\t/**-----------=====| EXPORTS |=====-----------**/\n\t/** DESCRIPTIONS:\n\t ** TWO COLUMN CALCULATION\n\t ** Webpack: module.exports\n\t **----------------------------------------------------------------**/\n\t//module.exports.TwoColumnsQueriesClass = TwoColumnsQueriesClass;\n\t//module.exports.sampleFunction = sampleFunction;\n\n\n\t/**-----------=====| EXPORTS |=====-----------**/\n\tmodule.exports.fIntroAjax = fIntroAjax;\n\n}() );\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/gdSite2016.es6\n ** module id = 2\n ** module chunks = 0\n **/","/**----------===| Created by Odee on 5/17/16.|===----------**/\n\n(function() { //IIFE:Immediately-Invoked Function Expression. Scope Encapsulation\n\n  \"use strict\";\n\n  /**-----------=====| IMPORT | REQUIRE |=====-----------**/\n  /** DESCRIPTIONS:\n   ** FILES IMPORTED FROM OTHER JS FILES\n   ** SEPERATE JS FILES FOR EASIER READABILITY AND MAINTENANCE\n   **----------------------------------------------------------------**/\n  let anim = require('./animationFunctions');\n\n  //let TwoColumnsClass = require('./codeArchitecture_X'); //.TwoColumnsClass;\n  //let twoColmn = new TwoColumnsClass();\n  //let sampleTest = require('./codeArchitecture_X');\n  //let sample = new sampleTest.sampleFunction();\n  //sampleTest.sampleFunction();\n  /**----------------------------------------------------------------**/\n  console.log(`\n  Filename: nextPreviousArrows.js\n  Import || Require: animationFunctions.js\n  `);\n  /**----------------------------------------------------------------**/\n\n  // class TwoColumnsClass {\n  //   constructor() { //rightColumn, leftColumn, newHeight, resizePercent) {\n  //     this.RightColumn; // = rightColumn; // = RightColumn; //right column property that's accessible outside through the Class\n  //   // this.LeftColumn; // = leftColumn; // = LeftColumn; //left column property\n  //   // this.NewHeight; // = newHeight;\n  //   // this.ResizePercent; // = resizePercent;\n  //   /**---------- To access these properties outside, use classInstance.property ----------**/\n  //   /**---------- But an instance of the fTwoColumns method has to be invoked first! ----------**/\n  //   }\n  //\n  //   fTwoColumns(rightColumnPercentage, imgOrigWidth, imgOrigHeight) {\n  //     this.RightColumn = Math.round(gdContainerWidth * (rightColumnPercentage / 100));\n  //     this.LeftColumn = Math.round(gdContainerWidth - this.RightColumn);\n  //     this.ResizePercent = fRoundToTwo(this.RightColumn / imgOrigWidth);\n  //     this.NewHeight = Math.round(imgOrigHeight * this.ResizePercent);\n  //   //this.Stringy = \"Hello from TwoColumn\";\n  //   //console.log(\"nextPreviousImage.Num:2c \", nextPreviousImage.Num); //test\n  //   //console.log(\"this.ResizePercent: \", this.ResizePercent);\n  //   //resizePercent      = fRoundToTwo (resizePercent);\n  //   //console.log (`Right Column: ${this.RightColumn} | Left Column: ${this.LeftColumn}`);\n  //   }\n  // }\n  //\n  // // let fTwoColumnsAnimation = function(elem, rightColumnPercentage, parentElemWidth) {\n  // //   let elemWidth = Math.round(parentElemWidth * (rightColumnPercentage / 100));\n  // //   elem.css({\n  // //     \"width\": elemWidth\n  // //   })\n  // // }\n\n\n  class NextPrevNavClass {\n    constructor() {\n      this.String = \"Hello from NextPreviousTwoColumnsClass constructor. Accessible outside when the method is not define.\";\n    // this.RightArrow = rightArrow;\n    // this.LeftArrow = leftArrow;\n    // this.ImgContainer = imgContainer;\n    // this.ImgContainerWidth; // = imgContainerWidth;\n    // this.fluidContainerWidth = fluidContainerWidth;\n    }\n\n    fNextPrevNavigation(\n      rightArrow, leftArrow, imgContainer, imgContainerWidth, fluidContainerWidth) { //}, rightColumnPercentage, imgOrigWidth, imgOrigHeight) {\n      this.String = \"Hello from fNextPreviousTwoColumnsClass method\";\n      this.RightArrow = rightArrow;\n      this.LeftArrow = leftArrow;\n      this.ImgContainer = imgContainer;\n      this.ImgContainerWidth = imgContainerWidth;\n      this.fluidContainerWidth = fluidContainerWidth;\n\n      this.Num = 0;\n      let num = 0;\n      let containerXPos = 0;\n      this.fluidContainerLeftPosition = 0;\n      let fluidContainerLeftPosition;\n\n      /**-----------=====| Next button function |=====-----------**/\n      rightArrow.click(() => {\n        num++;\n        this.Num = num;\n        containerXPos = this.ImgContainerWidth * num;\n        leftArrow.show();\n        // console.log(`\n        //     np:${imgContainer}-----------------------------------------\n        //     image width:                    ${this.ImgContainerWidth}\n        //     multiplied by numbr of clicks:  ${num}\n        //                                     ------------------\n        //     container x position:           ${containerXPos}\n        //     fluid-container width:          ${this.fluidContainerWidth - (this.ImgContainerWidth * 2)}\n        //     this.Num: same as clicks        ${this.Num}\n        //     np:---------------------------------------------------`)\n        /**-----| If the current x position greater or equals to the fluid-container width |-----**/\n        this.fluidContainerLeftPosition = (this.fluidContainerWidth - (this.ImgContainerWidth * 2))\n        if (containerXPos >= this.fluidContainerLeftPosition) {\n          rightArrow.hide();\n        }\n        /**-----| fXSlider: Slides the image container to the left |-----**/\n        anim.fXSlider(imgContainer, -(containerXPos));\n      //console.log(rightArrow, num, \":np---------------------------------------------------\");\n      });\n\n      /**-----------=====| Previous button function |=====-----------**/\n      leftArrow.click(() => {\n        num--;\n        this.Num = num;\n        containerXPos = this.ImgContainerWidth * num;\n        rightArrow.show();\n        // console.log(`\n        //     image width:                    ${this.ImgContainerWidth}\n        //     multiplied by numbr of clicks:  ${num}\n        //                                     ------------------\n        //     container x position:           ${containerXPos}\n        //     fluid-container width:          ${this.fluidContainerWidth - (this.ImgContainerWidth * 2)}\n        //     this.Num: same as clicks        ${this.Num}\n        // `)\n        /**-----| when it hits the beginning of the image container |-----**/\n        if (containerXPos <= 0) {\n          leftArrow.hide();\n        }\n        /**-----| fXSlider: Slides the image container to the right |-----**/\n        anim.fXSlider(imgContainer, -(containerXPos));\n      });\n    }\n  }\n\n  /**-----------=====| EXPORTS |=====-----------**/\n  /** DESCRIPTIONS:\n   ** IMAGE NAVIGATION MODULES\n   ** NEXT & PREVIOUS ARROW NAVS\n   ** Webpack: module.exports\n   **----------------------------------------------------------------**/\n  module.exports.NextPrevNavClass = NextPrevNavClass;\n  //module.exports.NextPreviousTwoColumnsClass = NextPreviousTwoColumnsClass;\n\n\n  /**----------------------------------------------------------------**/\n  console.log(`\n   Filename: nextPreviousArrows.js\n   Exports: module.exports.NextPrevNavClass = NextPrevNavClass `);\n  /**----------------------------------------------------------------**/\n\n\n}());\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/nextPreviousArrows.js\n ** module id = 3\n ** module chunks = 0\n **/","/**----------===| Created by Odee on 06/17/16.|===----------**/\n\n(function() { //IIFE:Immediately-Invoked Function Expression\n\n  \"use strict\";\n  console.log(\"Filename: twoColumns.js\");\n\n  let anim = require('./animationFunctions');\n\n  /**----------=====| fRoundToTwo Function |=====----------**/\n  /** Description:\n   ** fRoundToTwo: rounds the decimals to two.\n   **------------------------------------------------------**/\n  let fRoundToTwo = function(num) {\n    return +(Math.round(num + \"e+2\") + \"e-2\");\n  };\n\n  /**----------=====| TwoColumnsQueriesClass Class |=====----------------------------------------------------**/\n  /** Description:\n   ** Class to calculate the two columns within the container, in all screen sizes.\n   ** The right column width uses the \"rightColumnPercentage\" argument is used when the screen width is\n   **   small but uses the percentage pulled from json at larger screen width. This is also converted to pixel.\n   ** The left column will have the container's width minus the right column width.\n   **--------------------------------------------------------------------------------------------------**/\n  class TwoColumnsQueriesClass {\n    constructor() {}\n\n    fTwoColumnsQueries(contnrWidth, rightColumnPercentage, imgOrigWidth, imgOrigHeight) {\n      if (contnrWidth <= 400) {\n        this.ColumnPercentage = 100;\n        this.RightColumn = Math.round(contnrWidth * (this.ColumnPercentage / 100));\n        this.LeftColumn = Math.round(contnrWidth - this.RightColumn);\n        this.ResizePercent = fRoundToTwo(this.RightColumn / imgOrigWidth);\n        this.NewHeight = Math.round(imgOrigHeight * this.ResizePercent);\n\n      } else if (contnrWidth > 400 && contnrWidth <= 650) {\n        this.ColumnPercentage = 100;\n        this.RightColumn = Math.round(contnrWidth * (this.ColumnPercentage / 100));\n        this.LeftColumn = Math.round(contnrWidth - this.RightColumn);\n        this.ResizePercent = fRoundToTwo(this.RightColumn / imgOrigWidth);\n        this.NewHeight = Math.round(imgOrigHeight * this.ResizePercent);\n\n      } else {\n        this.ColumnPercentage = rightColumnPercentage;\n        this.RightColumn = Math.round(contnrWidth * (this.ColumnPercentage / 100));\n        this.LeftColumn = Math.round(contnrWidth - this.RightColumn);\n        this.ResizePercent = fRoundToTwo(this.RightColumn / imgOrigWidth);\n        this.NewHeight = Math.round(imgOrigHeight * this.ResizePercent);\n      // this.LeftColumn = Math.round(contnrWidth - this.RightColumn);\n      // this.ResizePercent = fRoundToTwo(this.RightColumn / imgOrigWidth);\n      // this.NewHeight = Math.round(imgOrigHeight * this.ResizePercent);\n      }\n    //   this.LeftColumn = Math.round(contnrWidth - this.RightColumn);\n    //   this.ResizePercent = fRoundToTwo(this.RightColumn / imgOrigWidth);\n    //   this.NewHeight = Math.round(imgOrigHeight * this.ResizePercent);\n    //console.log(\"this.NewHeight: \", this.NewHeight);\n    }\n  }\n\n  /**--------------------------------------------**/\n  class ThreeColumnsClass {\n    constructor() {}\n\n    fThreeColumns(contnrWidth) {\n      console.log(\"contnrWidth: \", contnrWidth);\n      let oneThird = contnrWidth / 3;\n      console.log(\"oneThird: \", oneThird);\n    }\n  }\n  ;\n  // let oneThirdTest = new ThreeColumnsClass();\n  // oneThirdTest.fThreeColumns();\n  /**--------------------------------------------**/\n\n  class TextQueriesClass {\n    constructor() {\n      //   this.contnrWidth = contnrWidth;\n      //   this.elem = elem;\n      //   this.smlFntSize = smlFntSize;\n      //   this.midFntSize = midFntSize;\n      //   this.lrgFntSize = lrgFntSize;\n    }\n\n    fTextQueries(contnrWidth, elem, smlFntSize, midFntSize, lrgFntSize) {\n      //console.log(\"contnrWidth: \", contnrWidth);\n      //console.log(\"elem.height(): \", elem.height());\n      if (contnrWidth <= 400) {\n        anim.fFontSizer(elem, smlFntSize); //\"4em\"\n        elem.css({\n          \"padding-left\": \"20px\"\n        })\n      } else if (contnrWidth > 400 && contnrWidth <= 650) {\n        anim.fFontSizer(elem, midFntSize); //\"4em\"\n        elem.css({\n          \"padding-left\": \"20px\"\n        })\n      } else {\n        anim.fFontSizer(elem, lrgFntSize); //\"4em\"\n        elem.css({\n          \"padding-left\": \"0px\"\n        })\n      }\n    }\n  }\n\n  /**-----------=====| EXPORTS |=====-----------**/\n  /** DESCRIPTIONS:\n   ** TWO COLUMNS MODULE\n   ** Webpack: module.exports\n   **----------------------------------------------------------------**/\n  module.exports.TwoColumnsQueriesClass = TwoColumnsQueriesClass;\n  module.exports.TextQueriesClass = TextQueriesClass;\n\n  module.exports.ThreeColumnsClass = ThreeColumnsClass;\n\n  /**----------------------------------------------------------------**/\n  console.log(`\n  Filename: twoColumns.js\n  module.exports.TwoColumnsQueriesClass = TwoColumnsQueriesClass\n  `);\n  /**----------------------------------------------------------------**/\n\n\n}());\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/twoColumns.js\n ** module id = 4\n ** module chunks = 0\n **/"],"sourceRoot":""}