package {	import flash.display.Sprite;	import flash.events.MouseEvent;	import flash.geom.Matrix;	import flash.geom.ColorTransform;	import flash.geom.Transform;	import flash.display.GradientType;	public class BGGradation extends Sprite {		public function BGGradation() {			var target:Sprite = new Sprite();			draw(target);			addChild(target);			target.useHandCursor = true;			target.buttonMode = true;			//     target.addEventListener(MouseEvent.CLICK, clickHandler)		}		public function draw(sprite:Sprite):void {			var matrix:Matrix = new Matrix();						var toDegrees:Number = Math.PI/180;			var a:Number = 45			var myangle = a*toDegrees;			trace("myangle: " + myangle)			var gradRotation:Number = myangle//Math.PI/180;			var gradScaleX:int = stage.stageWidth;			var gradScaleY:int = stage.stageHeight;			var translateX:int = 0;			var translateY:int = 0;			matrix.createGradientBox(gradScaleX, gradScaleY, gradRotation, translateX, translateY);			var red:uint = 0xFF0000;			var green:uint = 0x00FF00;			var blue:uint = 0x0000FF;			var colors:Array = [red, green, blue];			var alphas:Array = [1, 1, 1];			var ratios:Array = [0, 128, 255];			//var size:Number = 100;			//  sprite.graphics.beginGradientFill(GradientType.LINEAR, [red, green, blue], [1, 1, 1], [0, 150, 255]);			sprite.graphics.beginGradientFill(GradientType.LINEAR, colors, alphas, ratios, matrix);			sprite.graphics.drawRect(0, 0, stage.stageWidth, stage.stageHeight);//stage.stageWidth, stage.stageHeight);			//myShape.graphics.beginGradientFill(GradientType.LINEAR, [0x737373, 0xdadada, 0x121212], [1, 1, 1], [0, 130, 255], gradientBoxMatrix, spreadMethod);		}		/*  public function clickHandler(event:MouseEvent):void {		            var rOffset:Number = transform.colorTransform.redOffset + 25;		            var bOffset:Number = transform.colorTransform.redOffset - 25;		            this.transform.colorTransform = new ColorTransform(1, 1, 1, 1, rOffset, 0, bOffset, 0);		        }*/	}}