package {	import flash.display.Sprite;	import flash.display.MovieClip;	import flash.events.*;	import flash.media.Video;	import flash.net.NetConnection;	import flash.net.NetStream;	import fl.video.*;	public class FLV_Player extends MovieClip {		private var targetVidHolder:MovieClip;		private var videoURL:String;// = "../LloydAnthony/Media/Video/LloydAnthonyVid-1.flv";		private var connection:NetConnection;		private var stream:NetStream;		private var video:Video;		private var videoPlaying:Boolean = true;		private var togglePausePlay:Boolean;		private var nDuration:Number;		private var infoObject:Object;		public function FLV_Player (targetVidHolder:MovieClip, videoURL:String) {			this.targetVidHolder = targetVidHolder;			this.videoURL = videoURL;			connection = new NetConnection();			connection.addEventListener (NetStatusEvent.NET_STATUS, netStatusHandler);			connection.addEventListener (SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);			connection.connect (null);			//videoControlPanel();		}		private function netStatusHandler (event:NetStatusEvent):void {			switch (event.info.code) {				case "NetConnection.Connect.Success" :					connectStream ();					break;				case "NetStream.Play.StreamNotFound" :					trace ("Unable to locate video: " + videoURL);					break;			}		}		private function connectStream ():void {			stream = new NetStream(connection);			stream.addEventListener (NetStatusEvent.NET_STATUS, netStatusHandler);			stream.addEventListener (AsyncErrorEvent.ASYNC_ERROR, asyncErrorHandler);			video = new Video();			video.attachNetStream (stream);			//vidDisplay.attachNetStream(nsStream);			video.smoothing = true;			stream.play (videoURL);			//video.x = 100;			//video.y = 100;			video.scaleX = 1.5;			video.scaleY = 1.5;			targetVidHolder.addChild (video);			videoControlPanel ();			//---FLV Metadata: Properties			//stream.onMetaData = function (infoObject:Object):Void  {			//nDuration = infoObject.duration;			//trace("nDuration: " + nDuration)			///*for (var propName:String in infoObject) {;			//trace ("InfoObject Property: " + propName + " = " + infoObject[propName]);			//}*/			//}		}		private function securityErrorHandler (event:SecurityErrorEvent):void {			trace ("securityErrorHandler: " + event);		}		private function asyncErrorHandler (event:AsyncErrorEvent):void {			// ignore AsyncErrorEvent events.		}		private function videoControlPanel () {			//targetVidHolder.pauseVideoBtn.addEventListener(MouseEvent.ROLL_OVER, onOver);			targetVidHolder.playPauseBtns.addEventListener (MouseEvent.CLICK, togglePlayPauseVideo);						targetVidHolder.addEventListener(Event.ENTER_FRAME, startVideoTimer);		}		private function onOver (e:MouseEvent):void {			var targetObj:Object = e.currentTarget;			targetObj.buttonMode = true;			trace ("Stop Video ROLLOVER");			/*if(targetObj.hitTestPoint(this.mouseX, this.mouseY, true)){			trace("Test from LoadImage: you got me!")			} */		}		private function togglePlayPauseVideo (e:MouseEvent):void {			var targetObj:Object = e.currentTarget;			targetObj.buttonMode = true;						/*if(videoPlaying == true){			stream.pause();			//targetObj.playVideoBtn.visible = true;			//targetObj.pauseVideoBtn.visible = false;						//videoPlaying = false;			} else {			stream.play(videoURL);			//targetObj.playVideoBtn.visible = false;			//targetObj.pauseVideoBtn.visible = true;			//videoPlaying = true;			trace("toggle")			}*/			togglePausePlay = !togglePausePlay;			if (togglePausePlay == true) {				stream.pause ();				//imageTimer.stop ();				//currentImage = currentImage;				targetObj.playVideoBtn.visible = true;				targetObj.pauseVideoBtn.visible = false;								//stopVideoTimer();								//cpButtons.btnsContainer_mc.				//myCPBtnFPO.visible = false;				//mc.visible = false;				/*cpButtons.cpBtn_PlayPauseImg.playSlide_mc.visible = true;				cpButtons.cpBtn_PlayPauseImg.pauseSlide_mc.visible = false;*/				//myCPBtnFPO.cpBtn_PlayPauseImg.playSlide_mc.visible = true;				//myCPBtnFPO.cpBtn_PlayPauseImg.pauseSlide_mc.visible = false;				//trace(this.name)			} else {				stream.resume ();				targetObj.playVideoBtn.visible = false;				targetObj.pauseVideoBtn.visible = true;												//startVideoTimer();			}		}				private function startVideoTimer(e:Event):void{			var ns_seconds:Number = stream.time;			trace ("ns_seconds: " + ns_seconds);			var targetObj:Object = e.currentTarget;			targetObj.timeDisplay.text = ns_seconds		}		/*private function stopVideoTimer(e:Event):void{			var ns_seconds:Number = stream.time;			trace ("ns_seconds: " + ns_seconds);		}*/	}}/*package {import fl.video.FLVPlayback;import flash.display.Sprite;//•••------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------•••≈||: CLASSpublic class FLV_Player extends Sprite {//private var videoPath:String = "http://www.helpexamples.com/flash/video/caption_video.flv";private var targetMC:MovieClip;//private var imgBMWidth:Number;private var imgXPos:Number;//•••------------------------------------------------------------------•••≈||: PROPERTIES: STRINGprivate var targetURL:String;//•••------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------•••≈||: CONSTRUCTORpublic function FLV_Player(targetMC:MovieClip, targetURL:String) {this.targetMC = targetMC;this.targetURL = targetURL;//this.imgXPos = imgXPos;loadMe();}private function loadMe() {player.source = videoPath;player.skinBackgroundColor = 0x666666;player.skinBackgroundAlpha = 0.5;}//•••------------------------------------------------------------------•••≈||: METHODSprivate function loadMe():void {imageSiloLoader = new Loader();var urlSiloRekws:URLRequest = new URLRequest(targetURL);//aImgName[i]);imageSiloLoader.load(urlSiloRekws);targetMC.addChild(imageSiloLoader);imageSiloLoader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS,onProgress);imageSiloLoader.contentLoaderInfo.addEventListener(Event.COMPLETE, OnComplete);imageSiloLoader.addEventListener(MouseEvent.ROLL_OVER, onOver);}private function onProgress(e:ProgressEvent):void {//trace("onProgress")}private function OnComplete(e:Event):void {//•••----------------------------------------------------------------•••≈||: New BitmapData: Current ImageimgBM = Bitmap(e.target.content);//e.target.content);var imgBMData:BitmapData = imgBM.bitmapData;imgBM.smoothing = true;//imgBM.x = imgXPos;//imgBMWidth = imgBM.width//testImgWidth();}}}*/