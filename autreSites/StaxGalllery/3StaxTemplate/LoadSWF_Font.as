package {	import flash.display.MovieClip;	import flash.text.TextField;	import flash.text.TextFieldType;	//	import flash.display.StageAlign;	import flash.display.StageScaleMode;	import flash.display.DisplayObject;	//	import flash.display.Graphics;	import flash.display.Loader;	import flash.net.URLRequest;	import flash.net.URLLoader;	import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.net.URLRequest;	import flash.events.ProgressEvent;	import flash.events.Event;	import flash.events.IOErrorEvent;	import flash.events.ErrorEvent;	import flash.errors.IOError;	import flash.geom.ColorTransform;	import flash.filters.DropShadowFilter;		import flash.filters.BevelFilter;	    import flash.filters.BitmapFilter;	    import flash.filters.BitmapFilterQuality;	    import flash.filters.BitmapFilterType;	//•••------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------•••≈||: CLASS	public class LoadSWF_Font extends MovieClip {		//•••------------------------------------------------------------------•••≈||: PROPERTIES: LOADERS & BITMAPS		private var swfLoader:Loader;		//private var imgBM:Bitmap;		//•••------------------------------------------------------------------•••≈||: PROPERTIES: MOVIECLIPS • OBJECTS		private var targetObject:Object;		private var targetMC:MovieClip;		//•••------------------------------------------------------------------•••≈||: PROPERTIES: STRING		private var targetURL:String;		private var textString:String;		private var fontKolor:uint;		private var fontTypeSize:Number;		private var sFontShadow:String;		private var sFontBevel:String;		//•••--------------------------------------------------------------------------------------------------------------------------------------------------------------------------•••≈||: CONSTRUCTOR		public function LoadSWF_Font (targetMC:MovieClip, targetURL:String, textString:String, fontKolor:uint = 0xFFFFFF, fontTypeSize:Number = 1, sFontShadow:String = "TRUE", sFontBevel:String = "TRUE"){//, fontShadow:Boolean = false, sFontBevel:Boolean = false) {			this.targetMC = targetMC;			this.targetURL = targetURL;			this.textString = textString;			this.fontKolor = fontKolor;			this.fontTypeSize = fontTypeSize;			this.sFontShadow = sFontShadow;			this.sFontBevel = sFontBevel;						loadMe ();		}		//•••------------------------------------------------------------------•••≈||: METHODS		private function loadMe ():void {			swfLoader = new Loader();			var urlSiloRekws:URLRequest = new URLRequest(targetURL);//aImgName[i]);			swfLoader.load (urlSiloRekws);			targetMC.addChild (swfLoader);			swfLoader.contentLoaderInfo.addEventListener (ProgressEvent.PROGRESS,onProgress);			swfLoader.contentLoaderInfo.addEventListener (Event.COMPLETE, OnComplete);		}		private function onProgress (e:ProgressEvent):void {			//trace("onProgress")		}		private function OnComplete (e:Event):void {			//•••----------------------------------------------------------------•••≈||: New BitmapData: Current Image			/*imgBM = Bitmap(e.target.content);//e.target.content);			var imgBMData:BitmapData = imgBM.bitmapData;			imgBM.smoothing = true;*/			trace("completed")			//this.targetMC.addChild (targetURL);			targetObject = e.target.content						var loadedSWF:Object = targetObject.loaderInfo.content; 			trace("loadedSWF: " + loadedSWF)			//loadedSWF.gotoAndPlay(2);						loadedSWF.headFont_mc.headlineFont.text = textString;						var kolorTransform:ColorTransform = loadedSWF.headFont_mc.headlineFont.transform.colorTransform;			kolorTransform.color = fontKolor;			loadedSWF.headFont_mc.headlineFont.transform.colorTransform = kolorTransform;						loadedSWF.headFont_mc.scaleX = loadedSWF.headFont_mc.scaleY = fontTypeSize;						//loadedSWF.headFont_mc.x = 0;//-this.targetMC.stage.stageWidth/2			//loadedSWF.headFont_mc.y = -loadedSWF.headFont_mc.height;						//loadedSWF.y = 200;//-loadedSWF.height;						//var sampleFilters:Array = new Array();						/*var dropShadow:DropShadowFilter = new DropShadowFilter();			dropShadow.distance = 10;			dropShadow.alpha = 1;			dropShadow.blurX = 10;			dropShadow.blurY = 10;*/						//sampleFilters.push(new DropShadowFilter());						/*var bevel:BevelFilter = new BevelFilter();			bevel.angle = 45;						bevel.distance = 2;			bevel.blurX = 1;			bevel.blurY = 1;			bevel.strength = .25;*/						//sampleFilters.push(new BevelFilter());						if(this.sFontShadow == "TRUE"){				/*var dropShadow:DropShadowFilter = new DropShadowFilter();								dropShadow.distance = 10;				dropShadow.alpha = 1;				dropShadow.blurX = 10;				dropShadow.blurY = 10;*/				var dropShadow:DropShadowFilter = new DropShadowFilter();				dropShadow.distance = 5;				dropShadow.alpha = .5;				dropShadow.blurX = 10;				dropShadow.blurY = 10;				loadedSWF.headFont_mc.filters = [dropShadow];							} else {							}			if(this.sFontBevel == "TRUE"){				/*var bevel:BevelFilter = new BevelFilter();				loadedSWF.headFont_mc.filters = [bevel];							bevel.angle = 45;							bevel.distance = .01;*/								//var logo:FlashEssential = new FlashEssential();								//getBitmapFilter()												//loadedSWF.headFont_mc.filters = [bevel];								//logo.filters = [bevel];								var sampleFilters:Array = loadedSWF.headFont_mc.filters;								var bevel:BevelFilter = new BevelFilter();				bevel.angle = 45;								bevel.distance = 1;				bevel.blurX = 1;				bevel.blurY = 1;				bevel.strength = .25;				bevel.quality = BitmapFilterQuality.HIGH;				bevel.type = BitmapFilterType.INNER;				sampleFilters.push(bevel);				/*blur =	new BlurFilter(BLUR-X, BLUR-Y, QUALITY); 				// Actionscript assumes you'll want to add multiple filters at once.				// If you want to, you can add all of your filters to an array and 				// apply it that way. If you only have one, just create a quick array this way.				myObject.filters = [blur];*/								//addChild(logo);				/*var filter:BitmapFilter = getBitmapFilter();				var myFilters:Array = new Array();				myFilters.push(filter);				filters = myFilters;								loadedSWF.headFont_mc.filters = [filters];*/								loadedSWF.headFont_mc.filters = sampleFilters;//[1];//[bevel];			}		}				private function getBitmapFilter():BitmapFilter {			var distance:Number       = 1;			var angleInDegrees:Number = 45;			var highlightColor:Number = 0xFFFF00;			var highlightAlpha:Number = 0.5;			var shadowColor:Number    = 0x0000FF;			var shadowAlpha:Number    = 0.5;			var blurX:Number          = 1;			var blurY:Number          = 1;			var strength:Number       = 1;			var quality:Number        = BitmapFilterQuality.HIGH;			var type:String           = BitmapFilterType.INNER;			var knockout:Boolean      = false;					return new BevelFilter(distance,				           angleInDegrees,				           highlightColor,				           highlightAlpha,				           shadowColor,				           shadowAlpha,				           blurX,				           blurY,				           strength,				           quality,				           type,				           knockout);		        }			}}